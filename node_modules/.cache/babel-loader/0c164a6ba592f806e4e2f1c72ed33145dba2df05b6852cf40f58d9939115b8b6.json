{"ast":null,"code":"var _jsxFileName = \"G:\\\\Python\\\\ALPSF\\\\src\\\\components\\\\LearningChat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import {\n//   Input,\n//   Button,\n//   Card,\n//   List,\n//   Avatar,\n//   Select,\n//   Divider,\n//   Spin,\n//   message,\n//   Form // 添加Form导入\n// } from 'antd';\n// import { UserOutlined, RobotOutlined } from '@ant-design/icons';\n// import { streamChat } from '../services/api';\n//\n// const { TextArea } = Input;\n// const { Option } = Select;\n// const { Item } = Form; // 获取Form.Item的快捷方式\n//\n// const LearningChat = ({ showNotification }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [inputValue, setInputValue] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [contextLevel, setContextLevel] = useState('level1');\n//   const [contextId, setContextId] = useState(null);\n//   const messagesEndRef = useRef(null);\n//   const [form] = Form.useForm(); // 初始化表单实例\n//\n//   const handleSendMessage = async () => {\n//     if (!inputValue.trim()) return;\n//\n//     const userMessage = {\n//       content: inputValue,\n//       sender: 'user',\n//       timestamp: new Date().toISOString()\n//     };\n//\n//     setMessages([...messages, userMessage]);\n//     setInputValue('');\n//     setLoading(true);\n//\n//     try {\n//       // 添加临时消息占位\n//       setMessages(prev => [...prev, {\n//         content: '...',\n//         sender: 'bot',\n//         timestamp: new Date().toISOString(),\n//         isStreaming: true\n//       }]);\n//\n//       // 这里需要根据实际的streamChat实现调整\n//       const response = await streamChat(inputValue, contextLevel, contextId);\n//\n//       // 假设streamChat返回完整响应（实际可能是流式）\n//       setMessages(prev => {\n//         const last = prev[prev.length - 1];\n//         if (last.isStreaming) {\n//           return [...prev.slice(0, -1), {\n//             ...last,\n//             content: response.content || response,\n//             isStreaming: false\n//           }];\n//         }\n//         return prev;\n//       });\n//     } catch (error) {\n//       showNotification('error', '发送失败', error.message);\n//       setMessages(prev => [...prev, {\n//         content: '抱歉，与AI导师通信时出错',\n//         sender: 'bot',\n//         timestamp: new Date().toISOString(),\n//         isError: true\n//       }]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//\n//   return (\n//     <div style={{ maxWidth: 800, margin: '0 auto' }}>\n//       <Card\n//         title=\"AI学习导师\"\n//         extra={\n//           <Select\n//             defaultValue=\"level1\"\n//             style={{ width: 120 }}\n//             onChange={setContextLevel}\n//           >\n//             <Option value=\"level1\">Level 1 上下文</Option>\n//             <Option value=\"level2\">Level 2 上下文</Option>\n//           </Select>\n//         }\n//       >\n//         <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\n//           <List\n//             dataSource={messages}\n//             renderItem={(item) => (\n//               // 修改消息气泡样式\n//               <List.Item style={{\n//                 padding: '8px 0',\n//                 justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\n//               }}>\n//                 <div style={{\n//                   display: 'flex',\n//                   flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\n//                   alignItems: 'flex-start',\n//                   gap: 12\n//                 }}>\n//                   <Avatar\n//                     icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\n//                     style={{\n//                       backgroundColor: item.sender === 'user' ? '#2a97ff' : '#00b4b4',\n//                       boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n//                     }}\n//                   />\n//                   <div style={{\n//                     maxWidth: '70%',\n//                     background: item.sender === 'user'\n//                       ? 'linear-gradient(135deg, #2a97ff, #0066cc)'\n//                       : 'linear-gradient(135deg, #00b4b4, #008080)',\n//                     color: 'white',\n//                     padding: '12px 16px',\n//                     borderRadius: item.sender === 'user' ? '18px 4px 18px 18px' : '4px 18px 18px 18px',\n//                     boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n//                     transition: 'all 0.3s'\n//                   }}>\n//                     {item.content}\n//                   </div>\n//                 </div>\n//               </List.Item>\n//             )}\n//           />\n//           <div ref={messagesEndRef} />\n//           {loading && (\n//             <div style={{ textAlign: 'center', padding: 12 }}>\n//               <Spin tip=\"AI导师正在思考...\" />\n//             </div>\n//           )}\n//         </div>\n//\n//         <Form form={form} layout=\"vertical\">\n//           <Item label=\"上下文ID\" name=\"contextId\" style={{ marginBottom: 8 }}>\n//             <Input\n//               placeholder=\"输入知识图谱ID (可选)\"\n//               onChange={(e) => setContextId(e.target.value || null)}\n//             />\n//           </Item>\n//           <Item>\n//             <div style={{ display: 'flex', gap: 8 }}>\n//               <TextArea\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//                 placeholder=\"输入您的问题...\"\n//                 autoSize={{ minRows: 2, maxRows: 6 }}\n//                 onPressEnter={(e) => {\n//                   if (!e.shiftKey) {\n//                     e.preventDefault();\n//                     handleSendMessage();\n//                   }\n//                 }}\n//               />\n//               <Button\n//                 type=\"primary\"\n//                 onClick={handleSendMessage}\n//                 style={{ height: 'auto' }}\n//                 loading={loading}\n//                 disabled={loading}\n//               >\n//                 发送\n//               </Button>\n//             </div>\n//           </Item>\n//         </Form>\n//\n//         <Divider />\n//\n//       </Card>\n//     </div>\n//   );\n// };\n//\n// export default LearningChat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Input, Button, List, Avatar, Select, Spin, message, Typography, Space } from 'antd';\nimport { UserOutlined, RobotOutlined, SendOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Text\n} = Typography;\nconst LearningChat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    content: '你好！我是AI学习助手，有什么可以帮您的吗？',\n    sender: 'bot',\n    timestamp: new Date().toISOString()\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // 自动滚动到底部\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      content: inputValue,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages([...messages, userMessage]);\n    setInputValue('');\n    setLoading(true);\n\n    // 模拟AI回复\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        content: `这是关于\"${inputValue}\"的回复。AI可以提供详细解释和相关学习资源。`,\n        sender: 'bot',\n        timestamp: new Date().toISOString()\n      }]);\n      setLoading(false);\n    }, 1500);\n  };\n\n  // 处理容器滚动\n  const handleScroll = e => {\n    // 可以在这里添加滚动相关逻辑\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      background: '#f5f7fa',\n      padding: '16px',\n      boxSizing: 'border-box'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '12px 16px',\n        background: 'white',\n        borderRadius: '12px 12px 0 0',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        marginBottom: '-1px',\n        // 消除重叠边框\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        strong: true,\n        style: {\n          fontSize: '18px'\n        },\n        children: \"AI\\u5B66\\u4E60\\u52A9\\u624B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"default\",\n        style: {\n          width: '150px'\n        },\n        bordered: false,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"default\",\n          children: \"\\u9ED8\\u8BA4\\u6A21\\u5F0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"advanced\",\n          children: \"\\u9AD8\\u7EA7\\u6A21\\u5F0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatContainerRef,\n      onScroll: handleScroll,\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        background: 'white',\n        padding: '20px',\n        borderRadius: '0 0 12px 12px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        scrollBehavior: 'smooth'\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        dataSource: messages,\n        renderItem: (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '16px',\n            display: 'flex',\n            flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\n            gap: '12px',\n            animation: 'fadeIn 0.3s ease-out'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"large\",\n            icon: item.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 67\n            }, this),\n            style: {\n              backgroundColor: item.sender === 'user' ? '#1890ff' : '#00b4b4',\n              flexShrink: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: '80%',\n              background: item.sender === 'user' ? '#1890ff' : '#f0f2f5',\n              color: item.sender === 'user' ? 'white' : 'inherit',\n              padding: '12px 16px',\n              borderRadius: item.sender === 'user' ? '16px 4px 16px 16px' : '4px 16px 16px 16px',\n              boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\n              wordBreak: 'break-word',\n              whiteSpace: 'pre-wrap'\n            },\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '12px',\n          margin: '16px 0',\n          paddingLeft: '60px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 21\n          }, this),\n          style: {\n            backgroundColor: '#00b4b4'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#f0f2f5',\n            padding: '12px 16px',\n            borderRadius: '4px 16px 16px 16px',\n            display: 'inline-flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Spin, {\n            indicator: /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n              style: {\n                fontSize: 18\n              },\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            type: \"secondary\",\n            children: \"\\u6B63\\u5728\\u601D\\u8003...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px',\n        background: 'white',\n        padding: '16px',\n        borderRadius: '12px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898...\",\n          autoSize: {\n            minRows: 1,\n            maxRows: 6\n          },\n          onPressEnter: e => {\n            if (!e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage();\n            }\n          },\n          style: {\n            borderRadius: '8px 0 0 8px',\n            resize: 'none',\n            padding: '12px 16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleSendMessage,\n          icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 19\n          }, this),\n          loading: loading,\n          style: {\n            height: 'auto',\n            borderRadius: '0 8px 8px 0',\n            padding: '0 20px'\n          },\n          children: \"\\u53D1\\u9001\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      global: true,\n      children: `\n        @keyframes fadeIn {\n          from { opacity: 0; transform: translateY(10px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* 自定义滚动条 */\n        ::-webkit-scrollbar {\n          width: 8px;\n        }\n        ::-webkit-scrollbar-track {\n          background: #f1f1f1;\n          border-radius: 4px;\n        }\n        ::-webkit-scrollbar-thumb {\n          background: #c1c1c1;\n          border-radius: 4px;\n        }\n        ::-webkit-scrollbar-thumb:hover {\n          background: #a8a8a8;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(LearningChat, \"GTZmuSmyYYM4tVHlgIiOhctJNJw=\");\n_c = LearningChat;\nexport default LearningChat;\nvar _c;\n$RefreshReg$(_c, \"LearningChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","Button","List","Avatar","Select","Spin","message","Typography","Space","UserOutlined","RobotOutlined","SendOutlined","LoadingOutlined","jsxDEV","_jsxDEV","TextArea","Option","Text","LearningChat","_s","messages","setMessages","content","sender","timestamp","Date","toISOString","inputValue","setInputValue","loading","setLoading","messagesEndRef","chatContainerRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","setTimeout","prev","handleScroll","e","style","display","flexDirection","height","background","padding","boxSizing","children","justifyContent","alignItems","borderRadius","boxShadow","marginBottom","zIndex","strong","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","width","bordered","value","ref","onScroll","flex","overflowY","scrollBehavior","dataSource","renderItem","item","index","gap","animation","size","icon","backgroundColor","flexShrink","maxWidth","color","wordBreak","whiteSpace","margin","paddingLeft","indicator","spin","type","marginTop","Compact","onChange","target","placeholder","autoSize","minRows","maxRows","onPressEnter","shiftKey","preventDefault","resize","onClick","jsx","global","_c","$RefreshReg$"],"sources":["G:/Python/ALPSF/src/components/LearningChat.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\r\n// import {\r\n//   Input,\r\n//   Button,\r\n//   Card,\r\n//   List,\r\n//   Avatar,\r\n//   Select,\r\n//   Divider,\r\n//   Spin,\r\n//   message,\r\n//   Form // 添加Form导入\r\n// } from 'antd';\r\n// import { UserOutlined, RobotOutlined } from '@ant-design/icons';\r\n// import { streamChat } from '../services/api';\r\n//\r\n// const { TextArea } = Input;\r\n// const { Option } = Select;\r\n// const { Item } = Form; // 获取Form.Item的快捷方式\r\n//\r\n// const LearningChat = ({ showNotification }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [inputValue, setInputValue] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [contextLevel, setContextLevel] = useState('level1');\r\n//   const [contextId, setContextId] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n//   const [form] = Form.useForm(); // 初始化表单实例\r\n//\r\n//   const handleSendMessage = async () => {\r\n//     if (!inputValue.trim()) return;\r\n//\r\n//     const userMessage = {\r\n//       content: inputValue,\r\n//       sender: 'user',\r\n//       timestamp: new Date().toISOString()\r\n//     };\r\n//\r\n//     setMessages([...messages, userMessage]);\r\n//     setInputValue('');\r\n//     setLoading(true);\r\n//\r\n//     try {\r\n//       // 添加临时消息占位\r\n//       setMessages(prev => [...prev, {\r\n//         content: '...',\r\n//         sender: 'bot',\r\n//         timestamp: new Date().toISOString(),\r\n//         isStreaming: true\r\n//       }]);\r\n//\r\n//       // 这里需要根据实际的streamChat实现调整\r\n//       const response = await streamChat(inputValue, contextLevel, contextId);\r\n//\r\n//       // 假设streamChat返回完整响应（实际可能是流式）\r\n//       setMessages(prev => {\r\n//         const last = prev[prev.length - 1];\r\n//         if (last.isStreaming) {\r\n//           return [...prev.slice(0, -1), {\r\n//             ...last,\r\n//             content: response.content || response,\r\n//             isStreaming: false\r\n//           }];\r\n//         }\r\n//         return prev;\r\n//       });\r\n//     } catch (error) {\r\n//       showNotification('error', '发送失败', error.message);\r\n//       setMessages(prev => [...prev, {\r\n//         content: '抱歉，与AI导师通信时出错',\r\n//         sender: 'bot',\r\n//         timestamp: new Date().toISOString(),\r\n//         isError: true\r\n//       }]);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n//\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: '0 auto' }}>\r\n//       <Card\r\n//         title=\"AI学习导师\"\r\n//         extra={\r\n//           <Select\r\n//             defaultValue=\"level1\"\r\n//             style={{ width: 120 }}\r\n//             onChange={setContextLevel}\r\n//           >\r\n//             <Option value=\"level1\">Level 1 上下文</Option>\r\n//             <Option value=\"level2\">Level 2 上下文</Option>\r\n//           </Select>\r\n//         }\r\n//       >\r\n//         <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\r\n//           <List\r\n//             dataSource={messages}\r\n//             renderItem={(item) => (\r\n//               // 修改消息气泡样式\r\n//               <List.Item style={{\r\n//                 padding: '8px 0',\r\n//                 justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\r\n//               }}>\r\n//                 <div style={{\r\n//                   display: 'flex',\r\n//                   flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\r\n//                   alignItems: 'flex-start',\r\n//                   gap: 12\r\n//                 }}>\r\n//                   <Avatar\r\n//                     icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\r\n//                     style={{\r\n//                       backgroundColor: item.sender === 'user' ? '#2a97ff' : '#00b4b4',\r\n//                       boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\r\n//                     }}\r\n//                   />\r\n//                   <div style={{\r\n//                     maxWidth: '70%',\r\n//                     background: item.sender === 'user'\r\n//                       ? 'linear-gradient(135deg, #2a97ff, #0066cc)'\r\n//                       : 'linear-gradient(135deg, #00b4b4, #008080)',\r\n//                     color: 'white',\r\n//                     padding: '12px 16px',\r\n//                     borderRadius: item.sender === 'user' ? '18px 4px 18px 18px' : '4px 18px 18px 18px',\r\n//                     boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n//                     transition: 'all 0.3s'\r\n//                   }}>\r\n//                     {item.content}\r\n//                   </div>\r\n//                 </div>\r\n//               </List.Item>\r\n//             )}\r\n//           />\r\n//           <div ref={messagesEndRef} />\r\n//           {loading && (\r\n//             <div style={{ textAlign: 'center', padding: 12 }}>\r\n//               <Spin tip=\"AI导师正在思考...\" />\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//\r\n//         <Form form={form} layout=\"vertical\">\r\n//           <Item label=\"上下文ID\" name=\"contextId\" style={{ marginBottom: 8 }}>\r\n//             <Input\r\n//               placeholder=\"输入知识图谱ID (可选)\"\r\n//               onChange={(e) => setContextId(e.target.value || null)}\r\n//             />\r\n//           </Item>\r\n//           <Item>\r\n//             <div style={{ display: 'flex', gap: 8 }}>\r\n//               <TextArea\r\n//                 value={inputValue}\r\n//                 onChange={(e) => setInputValue(e.target.value)}\r\n//                 placeholder=\"输入您的问题...\"\r\n//                 autoSize={{ minRows: 2, maxRows: 6 }}\r\n//                 onPressEnter={(e) => {\r\n//                   if (!e.shiftKey) {\r\n//                     e.preventDefault();\r\n//                     handleSendMessage();\r\n//                   }\r\n//                 }}\r\n//               />\r\n//               <Button\r\n//                 type=\"primary\"\r\n//                 onClick={handleSendMessage}\r\n//                 style={{ height: 'auto' }}\r\n//                 loading={loading}\r\n//                 disabled={loading}\r\n//               >\r\n//                 发送\r\n//               </Button>\r\n//             </div>\r\n//           </Item>\r\n//         </Form>\r\n//\r\n//         <Divider />\r\n//\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default LearningChat;\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Input,\r\n  Button,\r\n  List,\r\n  Avatar,\r\n  Select,\r\n  Spin,\r\n  message,\r\n  Typography,\r\n  Space\r\n} from 'antd';\r\nimport { UserOutlined, RobotOutlined, SendOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst LearningChat = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      content: '你好！我是AI学习助手，有什么可以帮您的吗？',\r\n      sender: 'bot',\r\n      timestamp: new Date().toISOString()\r\n    }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const chatContainerRef = useRef(null);\r\n\r\n  // 自动滚动到底部\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = {\r\n      content: inputValue,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    setMessages([...messages, userMessage]);\r\n    setInputValue('');\r\n    setLoading(true);\r\n\r\n    // 模拟AI回复\r\n    setTimeout(() => {\r\n      setMessages(prev => [\r\n        ...prev,\r\n        {\r\n          content: `这是关于\"${inputValue}\"的回复。AI可以提供详细解释和相关学习资源。`,\r\n          sender: 'bot',\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      ]);\r\n      setLoading(false);\r\n    }, 1500);\r\n  };\r\n\r\n  // 处理容器滚动\r\n  const handleScroll = (e) => {\r\n    // 可以在这里添加滚动相关逻辑\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100vh',\r\n      background: '#f5f7fa',\r\n      padding: '16px',\r\n      boxSizing: 'border-box'\r\n    }}>\r\n      {/* 标题栏 */}\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '12px 16px',\r\n        background: 'white',\r\n        borderRadius: '12px 12px 0 0',\r\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n        marginBottom: '-1px', // 消除重叠边框\r\n        zIndex: 1\r\n      }}>\r\n        <Text strong style={{ fontSize: '18px' }}>AI学习助手</Text>\r\n        <Select\r\n          defaultValue=\"default\"\r\n          style={{ width: '150px' }}\r\n          bordered={false}\r\n        >\r\n          <Option value=\"default\">默认模式</Option>\r\n          <Option value=\"advanced\">高级模式</Option>\r\n        </Select>\r\n      </div>\r\n\r\n      {/* 聊天内容区域 */}\r\n      <div\r\n        ref={chatContainerRef}\r\n        onScroll={handleScroll}\r\n        style={{\r\n          flex: 1,\r\n          overflowY: 'auto',\r\n          background: 'white',\r\n          padding: '20px',\r\n          borderRadius: '0 0 12px 12px',\r\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n          scrollBehavior: 'smooth'\r\n        }}\r\n      >\r\n        <List\r\n          dataSource={messages}\r\n          renderItem={(item, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                marginBottom: '16px',\r\n                display: 'flex',\r\n                flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\r\n                gap: '12px',\r\n                animation: 'fadeIn 0.3s ease-out'\r\n              }}\r\n            >\r\n              <Avatar\r\n                size=\"large\"\r\n                icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\r\n                style={{\r\n                  backgroundColor: item.sender === 'user' ? '#1890ff' : '#00b4b4',\r\n                  flexShrink: 0\r\n                }}\r\n              />\r\n              <div style={{\r\n                maxWidth: '80%',\r\n                background: item.sender === 'user' ? '#1890ff' : '#f0f2f5',\r\n                color: item.sender === 'user' ? 'white' : 'inherit',\r\n                padding: '12px 16px',\r\n                borderRadius: item.sender === 'user'\r\n                  ? '16px 4px 16px 16px'\r\n                  : '4px 16px 16px 16px',\r\n                boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\r\n                wordBreak: 'break-word',\r\n                whiteSpace: 'pre-wrap'\r\n              }}>\r\n                {item.content}\r\n              </div>\r\n            </div>\r\n          )}\r\n        />\r\n\r\n        {loading && (\r\n          <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '12px',\r\n            margin: '16px 0',\r\n            paddingLeft: '60px'\r\n          }}>\r\n            <Avatar\r\n              size=\"large\"\r\n              icon={<RobotOutlined />}\r\n              style={{ backgroundColor: '#00b4b4' }}\r\n            />\r\n            <div style={{\r\n              background: '#f0f2f5',\r\n              padding: '12px 16px',\r\n              borderRadius: '4px 16px 16px 16px',\r\n              display: 'inline-flex',\r\n              alignItems: 'center',\r\n              gap: '8px'\r\n            }}>\r\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 18 }} spin />} />\r\n              <Text type=\"secondary\">正在思考...</Text>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* 输入区域 */}\r\n      <div style={{\r\n        marginTop: '16px',\r\n        background: 'white',\r\n        padding: '16px',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n      }}>\r\n        <Space.Compact style={{ width: '100%' }}>\r\n          <TextArea\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            placeholder=\"输入您的问题...\"\r\n            autoSize={{ minRows: 1, maxRows: 6 }}\r\n            onPressEnter={(e) => {\r\n              if (!e.shiftKey) {\r\n                e.preventDefault();\r\n                handleSendMessage();\r\n              }\r\n            }}\r\n            style={{\r\n              borderRadius: '8px 0 0 8px',\r\n              resize: 'none',\r\n              padding: '12px 16px'\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleSendMessage}\r\n            icon={<SendOutlined />}\r\n            loading={loading}\r\n            style={{\r\n              height: 'auto',\r\n              borderRadius: '0 8px 8px 0',\r\n              padding: '0 20px'\r\n            }}\r\n          >\r\n            发送\r\n          </Button>\r\n        </Space.Compact>\r\n      </div>\r\n\r\n      <style jsx global>{`\r\n        @keyframes fadeIn {\r\n          from { opacity: 0; transform: translateY(10px); }\r\n          to { opacity: 1; transform: translateY(0); }\r\n        }\r\n        \r\n        /* 自定义滚动条 */\r\n        ::-webkit-scrollbar {\r\n          width: 8px;\r\n        }\r\n        ::-webkit-scrollbar-track {\r\n          background: #f1f1f1;\r\n          border-radius: 4px;\r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n          background: #c1c1c1;\r\n          border-radius: 4px;\r\n        }\r\n        ::-webkit-scrollbar-thumb:hover {\r\n          background: #a8a8a8;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearningChat;"],"mappingsb,SAASC,YAAY,EAAEC,aAAa,EAAEC,YAAY,EAAEC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,MAAM;EAAEC;AAAS,CAAC,GAAGf,KAAK;AAC1B,MAAM;EAAEgB;AAAO,CAAC,GAAGZ,MAAM;AACzB,MAAM;EAAEa;AAAK,CAAC,GAAGV,UAAU;AAE3B,MAAMW,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,CACvC;IACEyB,OAAO,EAAE,wBAAwB;IACjCC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CACF,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMkC,cAAc,GAAGjC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMkC,gBAAgB,GAAGlC,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAMmC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdkC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACX,UAAU,CAACY,IAAI,CAAC,CAAC,EAAE;IAExB,MAAMC,WAAW,GAAG;MAClBlB,OAAO,EAAEK,UAAU;MACnBJ,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAEDL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEoB,WAAW,CAAC,CAAC;IACvCZ,aAAa,CAAC,EAAE,CAAC;IACjBE,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAW,UAAU,CAAC,MAAM;MACfpB,WAAW,CAACqB,IAAI,IAAI,CAClB,GAAGA,IAAI,EACP;QACEpB,OAAO,EAAE,QAAQK,UAAU,yBAAyB;QACpDJ,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CACF,CAAC;MACFI,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1B;EAAA,CACD;EAED,oBACE9B,OAAA;IAAK+B,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,MAAM,EAAE,OAAO;MACfC,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,gBAEAtC,OAAA;MAAK+B,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfO,cAAc,EAAE,eAAe;QAC/BC,UAAU,EAAE,QAAQ;QACpBJ,OAAO,EAAE,WAAW;QACpBD,UAAU,EAAE,OAAO;QACnBM,YAAY,EAAE,eAAe;QAC7BC,SAAS,EAAE,2BAA2B;QACtCC,YAAY,EAAE,MAAM;QAAE;QACtBC,MAAM,EAAE;MACV,CAAE;MAAAN,QAAA,gBACAtC,OAAA,CAACG,IAAI;QAAC0C,MAAM;QAACd,KAAK,EAAE;UAAEe,QAAQ,EAAE;QAAO,CAAE;QAAAR,QAAA,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDlD,OAAA,CAACV,MAAM;QACL6D,YAAY,EAAC,SAAS;QACtBpB,KAAK,EAAE;UAAEqB,KAAK,EAAE;QAAQ,CAAE;QAC1BC,QAAQ,EAAE,KAAM;QAAAf,QAAA,gBAEhBtC,OAAA,CAACE,MAAM;UAACoD,KAAK,EAAC,SAAS;UAAAhB,QAAA,EAAC;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrClD,OAAA,CAACE,MAAM;UAACoD,KAAK,EAAC,UAAU;UAAAhB,QAAA,EAAC;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNlD,OAAA;MACEuD,GAAG,EAAErC,gBAAiB;MACtBsC,QAAQ,EAAE3B,YAAa;MACvBE,KAAK,EAAE;QACL0B,IAAI,EAAE,CAAC;QACPC,SAAS,EAAE,MAAM;QACjBvB,UAAU,EAAE,OAAO;QACnBC,OAAO,EAAE,MAAM;QACfK,YAAY,EAAE,eAAe;QAC7BC,SAAS,EAAE,2BAA2B;QACtCiB,cAAc,EAAE;MAClB,CAAE;MAAArB,QAAA,gBAEFtC,OAAA,CAACZ,IAAI;QACHwE,UAAU,EAAEtD,QAAS;QACrBuD,UAAU,EAAEA,CAACC,IAAI,EAAEC,KAAK,kBACtB/D,OAAA;UAEE+B,KAAK,EAAE;YACLY,YAAY,EAAE,MAAM;YACpBX,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE6B,IAAI,CAACrD,MAAM,KAAK,MAAM,GAAG,aAAa,GAAG,KAAK;YAC7DuD,GAAG,EAAE,MAAM;YACXC,SAAS,EAAE;UACb,CAAE;UAAA3B,QAAA,gBAEFtC,OAAA,CAACX,MAAM;YACL6E,IAAI,EAAC,OAAO;YACZC,IAAI,EAAEL,IAAI,CAACrD,MAAM,KAAK,MAAM,gBAAGT,OAAA,CAACL,YAAY;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGlD,OAAA,CAACJ,aAAa;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACpEnB,KAAK,EAAE;cACLqC,eAAe,EAAEN,IAAI,CAACrD,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;cAC/D4D,UAAU,EAAE;YACd;UAAE;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFlD,OAAA;YAAK+B,KAAK,EAAE;cACVuC,QAAQ,EAAE,KAAK;cACfnC,UAAU,EAAE2B,IAAI,CAACrD,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;cAC1D8D,KAAK,EAAET,IAAI,CAACrD,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,SAAS;cACnD2B,OAAO,EAAE,WAAW;cACpBK,YAAY,EAAEqB,IAAI,CAACrD,MAAM,KAAK,MAAM,GAChC,oBAAoB,GACpB,oBAAoB;cACxBiC,SAAS,EAAE,2BAA2B;cACtC8B,SAAS,EAAE,YAAY;cACvBC,UAAU,EAAE;YACd,CAAE;YAAAnC,QAAA,EACCwB,IAAI,CAACtD;UAAO;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA,GA9BDa,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+BP;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEDnC,OAAO,iBACNf,OAAA;QAAK+B,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfQ,UAAU,EAAE,QAAQ;UACpBwB,GAAG,EAAE,MAAM;UACXU,MAAM,EAAE,QAAQ;UAChBC,WAAW,EAAE;QACf,CAAE;QAAArC,QAAA,gBACAtC,OAAA,CAACX,MAAM;UACL6E,IAAI,EAAC,OAAO;UACZC,IAAI,eAAEnE,OAAA,CAACJ,aAAa;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACxBnB,KAAK,EAAE;YAAEqC,eAAe,EAAE;UAAU;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACFlD,OAAA;UAAK+B,KAAK,EAAE;YACVI,UAAU,EAAE,SAAS;YACrBC,OAAO,EAAE,WAAW;YACpBK,YAAY,EAAE,oBAAoB;YAClCT,OAAO,EAAE,aAAa;YACtBQ,UAAU,EAAE,QAAQ;YACpBwB,GAAG,EAAE;UACP,CAAE;UAAA1B,QAAA,gBACAtC,OAAA,CAACT,IAAI;YAACqF,SAAS,eAAE5E,OAAA,CAACF,eAAe;cAACiC,KAAK,EAAE;gBAAEe,QAAQ,EAAE;cAAG,CAAE;cAAC+B,IAAI;YAAA;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtElD,OAAA,CAACG,IAAI;YAAC2E,IAAI,EAAC,WAAW;YAAAxC,QAAA,EAAC;UAAO;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDlD,OAAA;QAAKuD,GAAG,EAAEtC;MAAe;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGNlD,OAAA;MAAK+B,KAAK,EAAE;QACVgD,SAAS,EAAE,MAAM;QACjB5C,UAAU,EAAE,OAAO;QACnBC,OAAO,EAAE,MAAM;QACfK,YAAY,EAAE,MAAM;QACpBC,SAAS,EAAE;MACb,CAAE;MAAAJ,QAAA,eACAtC,OAAA,CAACN,KAAK,CAACsF,OAAO;QAACjD,KAAK,EAAE;UAAEqB,KAAK,EAAE;QAAO,CAAE;QAAAd,QAAA,gBACtCtC,OAAA,CAACC,QAAQ;UACPqD,KAAK,EAAEzC,UAAW;UAClBoE,QAAQ,EAAGnD,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACoD,MAAM,CAAC5B,KAAK,CAAE;UAC/C6B,WAAW,EAAC,yCAAW;UACvBC,QAAQ,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAE;UACrCC,YAAY,EAAGzD,CAAC,IAAK;YACnB,IAAI,CAACA,CAAC,CAAC0D,QAAQ,EAAE;cACf1D,CAAC,CAAC2D,cAAc,CAAC,CAAC;cAClBjE,iBAAiB,CAAC,CAAC;YACrB;UACF,CAAE;UACFO,KAAK,EAAE;YACLU,YAAY,EAAE,aAAa;YAC3BiD,MAAM,EAAE,MAAM;YACdtD,OAAO,EAAE;UACX;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFlD,OAAA,CAACb,MAAM;UACL2F,IAAI,EAAC,SAAS;UACda,OAAO,EAAEnE,iBAAkB;UAC3B2C,IAAI,eAAEnE,OAAA,CAACH,YAAY;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACvBnC,OAAO,EAAEA,OAAQ;UACjBgB,KAAK,EAAE;YACLG,MAAM,EAAE,MAAM;YACdO,YAAY,EAAE,aAAa;YAC3BL,OAAO,EAAE;UACX,CAAE;UAAAE,QAAA,EACH;QAED;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAENlD,OAAA;MAAO4F,GAAG;MAACC,MAAM;MAAAvD,QAAA,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA3OID,YAAY;AAAA0F,EAAA,GAAZ1F,YAAY;AA6OlB,eAAeA,YAAY;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}