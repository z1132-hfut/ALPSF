{"ast":null,"code":"var _jsxFileName = \"G:\\\\Python\\\\ALPSF\\\\src\\\\components\\\\TaskMonitor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, Card, Tag, Button, Badge, Spin, Empty } from 'antd';\nimport { ClockCircleOutlined, CheckCircleOutlined, CloseCircleOutlined, SyncOutlined } from '@ant-design/icons';\nimport { getTaskStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskMonitor = ({\n  tasks,\n  updateTask,\n  showNotification\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [pollingInterval, setPollingInterval] = useState(null);\n  useEffect(() => {\n    // 启动轮询检查任务状态\n    if (tasks.some(task => task.status === 'processing')) {\n      const interval = setInterval(() => {\n        checkTasksStatus();\n      }, 5000);\n      setPollingInterval(interval);\n    } else if (pollingInterval) {\n      clearInterval(pollingInterval);\n      setPollingInterval(null);\n    }\n    return () => {\n      if (pollingInterval) clearInterval(pollingInterval);\n    };\n  }, [tasks]);\n  const checkTasksStatus = async () => {\n    setLoading(true);\n    try {\n      await Promise.all(tasks.map(async task => {\n        if (task.status === 'processing') {\n          const status = await getTaskStatus(task.task_id);\n          if (status.error) {\n            updateTask(task.task_id, {\n              status: 'failed',\n              message: status.error\n            });\n          } else if (status.completed) {\n            updateTask(task.task_id, {\n              status: 'completed',\n              message: '任务完成',\n              result: status.result\n            });\n          }\n        }\n      }));\n    } catch (error) {\n      showNotification('error', '状态检查失败', '获取任务状态时出错');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusTag = status => {\n    switch (status) {\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, this),\n          color: \"processing\",\n          children: \"\\u8FDB\\u884C\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 27\n          }, this),\n          color: \"success\",\n          children: \"\\u5DF2\\u5B8C\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }, this),\n          color: \"error\",\n          children: \"\\u5931\\u8D25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 27\n          }, this),\n          color: \"default\",\n          children: \"\\u7B49\\u5F85\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u540E\\u53F0\\u4EFB\\u52A1\\u76D1\\u63A7\",\n    loading: loading,\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Empty, {\n      description: \"\\u6682\\u65E0\\u8FDB\\u884C\\u4E2D\\u7684\\u4EFB\\u52A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      dataSource: tasks,\n      renderItem: task => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Badge, {\n            status: task.status === 'processing' ? 'processing' : task.status === 'completed' ? 'success' : 'error'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this),\n          title: `${task.type}: ${task.keyword}`,\n          description: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u4EFB\\u52A1ID: \", task.task_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u72B6\\u6001: \", getStatusTag(task.status)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), task.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6D88\\u606F: \", task.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 38\n            }, this), task.parent_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u7236\\u56FE\\u8C31ID: \", task.parent_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskMonitor, \"NIYlw6j4iy1XqF9sRm7id7p3DcA=\");\n_c = TaskMonitor;\nexport default TaskMonitor;\nvar _c;\n$RefreshReg$(_c, \"TaskMonitor\");","map":{"version":3,"names":["React","useState","useEffect","List","Card","Tag","Button","Badge","Spin","Empty","ClockCircleOutlined","CheckCircleOutlined","CloseCircleOutlined","SyncOutlined","getTaskStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskMonitor","tasks","updateTask","showNotification","_s","loading","setLoading","pollingInterval","setPollingInterval","some","task","status","interval","setInterval","checkTasksStatus","clearInterval","Promise","all","map","task_id","error","message","completed","result","getStatusTag","icon","spin","fileName","_jsxFileName","lineNumber","columnNumber","color","children","title","length","description","dataSource","renderItem","Item","Meta","avatar","type","keyword","parent_id","_c","$RefreshReg$"],"sources":["G:/Python/ALPSF/src/components/TaskMonitor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, Card, Tag, Button, Badge, Spin, Empty } from 'antd';\r\nimport {\r\n  ClockCircleOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  SyncOutlined\r\n} from '@ant-design/icons';\r\nimport { getTaskStatus } from '../services/api';\r\n\r\nconst TaskMonitor = ({ tasks, updateTask, showNotification }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [pollingInterval, setPollingInterval] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 启动轮询检查任务状态\r\n    if (tasks.some(task => task.status === 'processing')) {\r\n      const interval = setInterval(() => {\r\n        checkTasksStatus();\r\n      }, 5000);\r\n      setPollingInterval(interval);\r\n    } else if (pollingInterval) {\r\n      clearInterval(pollingInterval);\r\n      setPollingInterval(null);\r\n    }\r\n\r\n    return () => {\r\n      if (pollingInterval) clearInterval(pollingInterval);\r\n    };\r\n  }, [tasks]);\r\n\r\n  const checkTasksStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await Promise.all(tasks.map(async (task) => {\r\n        if (task.status === 'processing') {\r\n          const status = await getTaskStatus(task.task_id);\r\n          if (status.error) {\r\n            updateTask(task.task_id, { status: 'failed', message: status.error });\r\n          } else if (status.completed) {\r\n            updateTask(task.task_id, {\r\n              status: 'completed',\r\n              message: '任务完成',\r\n              result: status.result\r\n            });\r\n          }\r\n        }\r\n      }));\r\n    } catch (error) {\r\n      showNotification('error', '状态检查失败', '获取任务状态时出错');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusTag = (status) => {\r\n    switch (status) {\r\n      case 'processing':\r\n        return <Tag icon={<SyncOutlined spin />} color=\"processing\">进行中</Tag>;\r\n      case 'completed':\r\n        return <Tag icon={<CheckCircleOutlined />} color=\"success\">已完成</Tag>;\r\n      case 'failed':\r\n        return <Tag icon={<CloseCircleOutlined />} color=\"error\">失败</Tag>;\r\n      default:\r\n        return <Tag icon={<ClockCircleOutlined />} color=\"default\">等待中</Tag>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card title=\"后台任务监控\" loading={loading}>\r\n      {tasks.length === 0 ? (\r\n        <Empty description=\"暂无进行中的任务\" />\r\n      ) : (\r\n        <List\r\n          dataSource={tasks}\r\n          renderItem={(task) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Badge\r\n                    status={\r\n                      task.status === 'processing' ? 'processing' :\r\n                      task.status === 'completed' ? 'success' : 'error'\r\n                    }\r\n                  />\r\n                }\r\n                title={`${task.type}: ${task.keyword}`}\r\n                description={\r\n                  <>\r\n                    <div>任务ID: {task.task_id}</div>\r\n                    <div>状态: {getStatusTag(task.status)}</div>\r\n                    {task.message && <div>消息: {task.message}</div>}\r\n                    {task.parent_id && <div>父图谱ID: {task.parent_id}</div>}\r\n                  </>\r\n                }\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskMonitor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAClE,SACEC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,YAAY,QACP,mBAAmB;AAC1B,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACA,IAAIkB,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,YAAY,CAAC,EAAE;MACpD,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCC,gBAAgB,CAAC,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;MACRN,kBAAkB,CAACI,QAAQ,CAAC;IAC9B,CAAC,MAAM,IAAIL,eAAe,EAAE;MAC1BQ,aAAa,CAACR,eAAe,CAAC;MAC9BC,kBAAkB,CAAC,IAAI,CAAC;IAC1B;IAEA,OAAO,MAAM;MACX,IAAID,eAAe,EAAEQ,aAAa,CAACR,eAAe,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMU,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACiB,GAAG,CAAC,MAAOR,IAAI,IAAK;QAC1C,IAAIA,IAAI,CAACC,MAAM,KAAK,YAAY,EAAE;UAChC,MAAMA,MAAM,GAAG,MAAMhB,aAAa,CAACe,IAAI,CAACS,OAAO,CAAC;UAChD,IAAIR,MAAM,CAACS,KAAK,EAAE;YAChBlB,UAAU,CAACQ,IAAI,CAACS,OAAO,EAAE;cAAER,MAAM,EAAE,QAAQ;cAAEU,OAAO,EAAEV,MAAM,CAACS;YAAM,CAAC,CAAC;UACvE,CAAC,MAAM,IAAIT,MAAM,CAACW,SAAS,EAAE;YAC3BpB,UAAU,CAACQ,IAAI,CAACS,OAAO,EAAE;cACvBR,MAAM,EAAE,WAAW;cACnBU,OAAO,EAAE,MAAM;cACfE,MAAM,EAAEZ,MAAM,CAACY;YACjB,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdjB,gBAAgB,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC;IAClD,CAAC,SAAS;MACRG,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkB,YAAY,GAAIb,MAAM,IAAK;IAC/B,QAAQA,MAAM;MACZ,KAAK,YAAY;QACf,oBAAOd,OAAA,CAACX,GAAG;UAACuC,IAAI,eAAE5B,OAAA,CAACH,YAAY;YAACgC,IAAI;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACC,KAAK,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MACvE,KAAK,WAAW;QACd,oBAAOjC,OAAA,CAACX,GAAG;UAACuC,IAAI,eAAE5B,OAAA,CAACL,mBAAmB;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACC,KAAK,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MACtE,KAAK,QAAQ;QACX,oBAAOjC,OAAA,CAACX,GAAG;UAACuC,IAAI,eAAE5B,OAAA,CAACJ,mBAAmB;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACC,KAAK,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MACnE;QACE,oBAAOjC,OAAA,CAACX,GAAG;UAACuC,IAAI,eAAE5B,OAAA,CAACN,mBAAmB;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACC,KAAK,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IACxE;EACF,CAAC;EAED,oBACEjC,OAAA,CAACZ,IAAI;IAACgD,KAAK,EAAC,sCAAQ;IAAC5B,OAAO,EAAEA,OAAQ;IAAA2B,QAAA,EACnC/B,KAAK,CAACiC,MAAM,KAAK,CAAC,gBACjBrC,OAAA,CAACP,KAAK;MAAC6C,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEhCjC,OAAA,CAACb,IAAI;MACHoD,UAAU,EAAEnC,KAAM;MAClBoC,UAAU,EAAG3B,IAAI,iBACfb,OAAA,CAACb,IAAI,CAACsD,IAAI;QAAAN,QAAA,eACRnC,OAAA,CAACb,IAAI,CAACsD,IAAI,CAACC,IAAI;UACbC,MAAM,eACJ3C,OAAA,CAACT,KAAK;YACJuB,MAAM,EACJD,IAAI,CAACC,MAAM,KAAK,YAAY,GAAG,YAAY,GAC3CD,IAAI,CAACC,MAAM,KAAK,WAAW,GAAG,SAAS,GAAG;UAC3C;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACF;UACDG,KAAK,EAAE,GAAGvB,IAAI,CAAC+B,IAAI,KAAK/B,IAAI,CAACgC,OAAO,EAAG;UACvCP,WAAW,eACTtC,OAAA,CAAAE,SAAA;YAAAiC,QAAA,gBACEnC,OAAA;cAAAmC,QAAA,GAAK,kBAAM,EAACtB,IAAI,CAACS,OAAO;YAAA;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC/BjC,OAAA;cAAAmC,QAAA,GAAK,gBAAI,EAACR,YAAY,CAACd,IAAI,CAACC,MAAM,CAAC;YAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACzCpB,IAAI,CAACW,OAAO,iBAAIxB,OAAA;cAAAmC,QAAA,GAAK,gBAAI,EAACtB,IAAI,CAACW,OAAO;YAAA;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC7CpB,IAAI,CAACiC,SAAS,iBAAI9C,OAAA;cAAAmC,QAAA,GAAK,wBAAO,EAACtB,IAAI,CAACiC,SAAS;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,eACrD;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IACX;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA5FIJ,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AA8FjB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}