{"ast":null,"code":"var _jsxFileName = \"G:\\\\Python\\\\ALPSF\\\\src\\\\components\\\\LearningChat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import {\n//   Input,\n//   Button,\n//   Card,\n//   List,\n//   Avatar,\n//   Select,\n//   Divider,\n//   Spin,\n//   message,\n//   Form\n// } from 'antd';\n// import { UserOutlined, RobotOutlined } from '@ant-design/icons';\n// import { streamChat } from '../services/api';\n//\n// const { TextArea } = Input;\n// const { Option } = Select;\n//\n// const LearningChat = ({ showNotification }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [inputValue, setInputValue] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [contextLevel, setContextLevel] = useState('level1');\n//   const [contextId, setContextId] = useState(null);\n//   const messagesEndRef = useRef(null);\n//\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n//\n//   // const handleSendMessage = async () => {\n//   //   if (!inputValue.trim()) return;\n//   //\n//   //   const userMessage = {\n//   //     content: inputValue,\n//   //     sender: 'user',\n//   //     timestamp: new Date().toISOString()\n//   //   };\n//   //\n//   //   setMessages([...messages, userMessage]);\n//   //   setInputValue('');\n//   //   setLoading(true);\n//   //\n//   //   try {\n//   //     const botResponse = await streamChat(inputValue, contextLevel, contextId);\n//   //\n//   //     setMessages(prev => [\n//   //       ...prev,\n//   //       {\n//   //         content: botResponse.content,\n//   //         sender: 'bot',\n//   //         timestamp: new Date().toISOString()\n//   //       }\n//   //     ]);\n//   //   } catch (error) {\n//   //     showNotification('error', '发送失败', '与AI导师通信时出错');\n//   //   } finally {\n//   //     setLoading(false);\n//   //   }\n//   // };\n//\n//   const handleSendMessage = async () => {\n//   if (!inputValue.trim()) return;\n//\n//   const userMessage = {\n//     content: inputValue,\n//     sender: 'user',\n//     timestamp: new Date().toISOString()\n//   };\n//\n//   setMessages([...messages, userMessage]);\n//   setInputValue('');\n//   setLoading(true);\n//\n//   try {\n//     // 添加一个临时消息用于显示流式响应\n//     setMessages(prev => [...prev, {\n//       content: '',\n//       sender: 'bot',\n//       timestamp: new Date().toISOString(),\n//       isStreaming: true\n//     }]);\n//\n//     const response = await streamChat(inputValue, contextLevel, contextId);\n//\n//     // 处理流式数据（假设使用EventSource或其他流式处理方式）\n//     // 这里需要根据实际的流式实现进行调整\n//     let content = '';\n//     response.on('data', (chunk) => {\n//       content += chunk;\n//       setMessages(prev => {\n//         const last = prev[prev.length - 1];\n//         if (last.isStreaming) {\n//           return [...prev.slice(0, -1), { ...last, content }];\n//         }\n//         return prev;\n//       });\n//     });\n//\n//     response.on('end', () => {\n//       setMessages(prev => {\n//         const last = prev[prev.length - 1];\n//         if (last.isStreaming) {\n//           return [...prev.slice(0, -1), { ...last, isStreaming: false }];\n//         }\n//         return prev;\n//       });\n//       setLoading(false);\n//     });\n//   } catch (error) {\n//     setMessages(prev => [...prev, {\n//       content: '抱歉，与AI导师通信时出错',\n//       sender: 'bot',\n//       timestamp: new Date().toISOString(),\n//       isError: true\n//     }]);\n//     setLoading(false);\n//   }\n// };\n//\n// // 在UI中添加contextId输入\n// <Form.Item label=\"上下文ID\" style={{ marginBottom: 8 }}>\n//   <Input\n//     value={contextId || ''}\n//     onChange={(e) => setContextId(e.target.value || null)}\n//     placeholder=\"输入知识图谱ID (可选)\"\n//   />\n// </Form.Item>\n//\n//   return (\n//     <div style={{ maxWidth: 800, margin: '0 auto' }}>\n//       <Card\n//         title=\"AI学习导师\"\n//         extra={\n//           <Select\n//             defaultValue=\"level1\"\n//             style={{ width: 120 }}\n//             onChange={setContextLevel}\n//           >\n//             <Option value=\"level1\">Level 1 上下文</Option>\n//             <Option value=\"level2\">Level 2 上下文</Option>\n//           </Select>\n//         }\n//       >\n//         <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\n//           <List\n//             dataSource={messages}\n//             renderItem={(item) => (\n//               <List.Item style={{\n//                 padding: '12px 0',\n//                 justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\n//               }}>\n//                 <div style={{\n//                   display: 'flex',\n//                   flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\n//                   alignItems: 'flex-start',\n//                   gap: 12\n//                 }}>\n//                   <Avatar\n//                     icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\n//                     style={{\n//                       backgroundColor: item.sender === 'user' ? '#1890ff' : '#52c41a'\n//                     }}\n//                   />\n//                   <div style={{\n//                     maxWidth: '70%',\n//                     backgroundColor: item.sender === 'user' ? '#e6f7ff' : '#f6ffed',\n//                     padding: '8px 12px',\n//                     borderRadius: 4\n//                   }}>\n//                     {item.content}\n//                   </div>\n//                 </div>\n//               </List.Item>\n//             )}\n//           />\n//           <div ref={messagesEndRef} />\n//           {loading && (\n//             <div style={{ textAlign: 'center', padding: 12 }}>\n//               <Spin tip=\"AI导师正在思考...\" />\n//             </div>\n//           )}\n//         </div>\n//\n//         <div style={{ display: 'flex', gap: 8 }}>\n//           <TextArea\n//             value={inputValue}\n//             onChange={(e) => setInputValue(e.target.value)}\n//             placeholder=\"输入您的问题...\"\n//             autoSize={{ minRows: 2, maxRows: 6 }}\n//             onPressEnter={(e) => {\n//               if (!e.shiftKey) {\n//                 e.preventDefault();\n//                 handleSendMessage();\n//               }\n//             }}\n//           />\n//           <Button\n//             type=\"primary\"\n//             onClick={handleSendMessage}\n//             style={{ height: 'auto' }}\n//           >\n//             发送\n//           </Button>\n//         </div>\n//\n//         <Divider />\n//         <div>\n//           <h4>示例问题:</h4>\n//           <p>- \"请解释Python中的列表和元组的区别\"</p>\n//           <p>- \"机器学习中的监督学习和无监督学习有什么不同?\"</p>\n//           <p>- \"世界历史中的工业革命有哪些重要影响?\"</p>\n//         </div>\n//       </Card>\n//     </div>\n//   );\n// };\n//\n// export default LearningChat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Input, Button, Card, List, Avatar, Select, Divider, Spin, message, Form // 添加Form导入\n} from 'antd';\nimport { UserOutlined, RobotOutlined } from '@ant-design/icons';\nimport { streamChat } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Item\n} = Form; // 获取Form.Item的快捷方式\n\nconst LearningChat = ({\n  showNotification\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [contextLevel, setContextLevel] = useState('level1');\n  const [contextId, setContextId] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [form] = Form.useForm(); // 初始化表单实例\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      content: inputValue,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages([...messages, userMessage]);\n    setInputValue('');\n    setLoading(true);\n    try {\n      // 添加临时消息占位\n      setMessages(prev => [...prev, {\n        content: '...',\n        sender: 'bot',\n        timestamp: new Date().toISOString(),\n        isStreaming: true\n      }]);\n\n      // 这里需要根据实际的streamChat实现调整\n      const response = await streamChat(inputValue, contextLevel, contextId);\n\n      // 假设streamChat返回完整响应（实际可能是流式）\n      setMessages(prev => {\n        const last = prev[prev.length - 1];\n        if (last.isStreaming) {\n          return [...prev.slice(0, -1), {\n            ...last,\n            content: response.content || response,\n            isStreaming: false\n          }];\n        }\n        return prev;\n      });\n    } catch (error) {\n      showNotification('error', '发送失败', error.message);\n      setMessages(prev => [...prev, {\n        content: '抱歉，与AI导师通信时出错',\n        sender: 'bot',\n        timestamp: new Date().toISOString(),\n        isError: true\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"AI\\u5B66\\u4E60\\u5BFC\\u5E08\",\n      extra: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"level1\",\n        style: {\n          width: 120\n        },\n        onChange: setContextLevel,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"level1\",\n          children: \"Level 1 \\u4E0A\\u4E0B\\u6587\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"level2\",\n          children: \"Level 2 \\u4E0A\\u4E0B\\u6587\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 500,\n          overflowY: 'auto',\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          dataSource: messages,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            style: {\n              padding: '12px 0',\n              justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\n                alignItems: 'flex-start',\n                gap: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                icon: item.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 52\n                }, this) : /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 71\n                }, this),\n                style: {\n                  backgroundColor: item.sender === 'user' ? '#1890ff' : '#52c41a'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  maxWidth: '70%',\n                  backgroundColor: item.sender === 'user' ? '#e6f7ff' : '#f6ffed',\n                  padding: '8px 12px',\n                  borderRadius: 4,\n                  color: item.isError ? '#000000' : 'inherit'\n                },\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(Spin, {\n            tip: \"AI\\u5BFC\\u5E08\\u6B63\\u5728\\u601D\\u8003...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u4E0A\\u4E0B\\u6587ID\",\n          name: \"contextId\",\n          style: {\n            marginBottom: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u8F93\\u5165\\u77E5\\u8BC6\\u56FE\\u8C31ID (\\u53EF\\u9009)\",\n            onChange: e => setContextId(e.target.value || null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextArea, {\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              placeholder: \"\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898...\",\n              autoSize: {\n                minRows: 2,\n                maxRows: 6\n              },\n              onPressEnter: e => {\n                if (!e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: handleSendMessage,\n              style: {\n                height: 'auto'\n              },\n              loading: loading,\n              disabled: loading,\n              children: \"\\u53D1\\u9001\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u793A\\u4F8B\\u95EE\\u9898:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"- \\\"\\u8BF7\\u89E3\\u91CAPython\\u4E2D\\u7684\\u5217\\u8868\\u548C\\u5143\\u7EC4\\u7684\\u533A\\u522B\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"- \\\"\\u673A\\u5668\\u5B66\\u4E60\\u4E2D\\u7684\\u76D1\\u7763\\u5B66\\u4E60\\u548C\\u65E0\\u76D1\\u7763\\u5B66\\u4E60\\u6709\\u4EC0\\u4E48\\u4E0D\\u540C?\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"- \\\"\\u4E16\\u754C\\u5386\\u53F2\\u4E2D\\u7684\\u5DE5\\u4E1A\\u9769\\u547D\\u6709\\u54EA\\u4E9B\\u91CD\\u8981\\u5F71\\u54CD?\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n_s(LearningChat, \"Q3AB8g7znvKIVENtyttPs6YcwR4=\", false, function () {\n  return [Form.useForm];\n});\n_c = LearningChat;\nexport default LearningChat;\nvar _c;\n$RefreshReg$(_c, \"LearningChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","Button","Card","List","Avatar","Select","Divider","Spin","message","Form","UserOutlined","RobotOutlined","streamChat","jsxDEV","_jsxDEV","TextArea","Option","Item","LearningChat","showNotification","_s","messages","setMessages","inputValue","setInputValue","loading","setLoading","contextLevel","setContextLevel","contextId","setContextId","messagesEndRef","form","useForm","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","content","sender","timestamp","Date","toISOString","prev","isStreaming","response","last","length","slice","error","isError","style","maxWidth","margin","children","title","extra","defaultValue","width","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","marginBottom","dataSource","renderItem","item","padding","justifyContent","display","flexDirection","alignItems","gap","icon","backgroundColor","borderRadius","color","ref","textAlign","tip","layout","label","name","placeholder","e","target","autoSize","minRows","maxRows","onPressEnter","shiftKey","preventDefault","type","onClick","disabled","_c","$RefreshReg$"],"sources":["G:/Python/ALPSF/src/components/LearningChat.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\r\n// import {\r\n//   Input,\r\n//   Button,\r\n//   Card,\r\n//   List,\r\n//   Avatar,\r\n//   Select,\r\n//   Divider,\r\n//   Spin,\r\n//   message,\r\n//   Form\r\n// } from 'antd';\r\n// import { UserOutlined, RobotOutlined } from '@ant-design/icons';\r\n// import { streamChat } from '../services/api';\r\n//\r\n// const { TextArea } = Input;\r\n// const { Option } = Select;\r\n//\r\n// const LearningChat = ({ showNotification }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [inputValue, setInputValue] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [contextLevel, setContextLevel] = useState('level1');\r\n//   const [contextId, setContextId] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n//\r\n//   const scrollToBottom = () => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   };\r\n//\r\n//   useEffect(() => {\r\n//     scrollToBottom();\r\n//   }, [messages]);\r\n//\r\n//   // const handleSendMessage = async () => {\r\n//   //   if (!inputValue.trim()) return;\r\n//   //\r\n//   //   const userMessage = {\r\n//   //     content: inputValue,\r\n//   //     sender: 'user',\r\n//   //     timestamp: new Date().toISOString()\r\n//   //   };\r\n//   //\r\n//   //   setMessages([...messages, userMessage]);\r\n//   //   setInputValue('');\r\n//   //   setLoading(true);\r\n//   //\r\n//   //   try {\r\n//   //     const botResponse = await streamChat(inputValue, contextLevel, contextId);\r\n//   //\r\n//   //     setMessages(prev => [\r\n//   //       ...prev,\r\n//   //       {\r\n//   //         content: botResponse.content,\r\n//   //         sender: 'bot',\r\n//   //         timestamp: new Date().toISOString()\r\n//   //       }\r\n//   //     ]);\r\n//   //   } catch (error) {\r\n//   //     showNotification('error', '发送失败', '与AI导师通信时出错');\r\n//   //   } finally {\r\n//   //     setLoading(false);\r\n//   //   }\r\n//   // };\r\n//\r\n//   const handleSendMessage = async () => {\r\n//   if (!inputValue.trim()) return;\r\n//\r\n//   const userMessage = {\r\n//     content: inputValue,\r\n//     sender: 'user',\r\n//     timestamp: new Date().toISOString()\r\n//   };\r\n//\r\n//   setMessages([...messages, userMessage]);\r\n//   setInputValue('');\r\n//   setLoading(true);\r\n//\r\n//   try {\r\n//     // 添加一个临时消息用于显示流式响应\r\n//     setMessages(prev => [...prev, {\r\n//       content: '',\r\n//       sender: 'bot',\r\n//       timestamp: new Date().toISOString(),\r\n//       isStreaming: true\r\n//     }]);\r\n//\r\n//     const response = await streamChat(inputValue, contextLevel, contextId);\r\n//\r\n//     // 处理流式数据（假设使用EventSource或其他流式处理方式）\r\n//     // 这里需要根据实际的流式实现进行调整\r\n//     let content = '';\r\n//     response.on('data', (chunk) => {\r\n//       content += chunk;\r\n//       setMessages(prev => {\r\n//         const last = prev[prev.length - 1];\r\n//         if (last.isStreaming) {\r\n//           return [...prev.slice(0, -1), { ...last, content }];\r\n//         }\r\n//         return prev;\r\n//       });\r\n//     });\r\n//\r\n//     response.on('end', () => {\r\n//       setMessages(prev => {\r\n//         const last = prev[prev.length - 1];\r\n//         if (last.isStreaming) {\r\n//           return [...prev.slice(0, -1), { ...last, isStreaming: false }];\r\n//         }\r\n//         return prev;\r\n//       });\r\n//       setLoading(false);\r\n//     });\r\n//   } catch (error) {\r\n//     setMessages(prev => [...prev, {\r\n//       content: '抱歉，与AI导师通信时出错',\r\n//       sender: 'bot',\r\n//       timestamp: new Date().toISOString(),\r\n//       isError: true\r\n//     }]);\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n//\r\n// // 在UI中添加contextId输入\r\n// <Form.Item label=\"上下文ID\" style={{ marginBottom: 8 }}>\r\n//   <Input\r\n//     value={contextId || ''}\r\n//     onChange={(e) => setContextId(e.target.value || null)}\r\n//     placeholder=\"输入知识图谱ID (可选)\"\r\n//   />\r\n// </Form.Item>\r\n//\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: '0 auto' }}>\r\n//       <Card\r\n//         title=\"AI学习导师\"\r\n//         extra={\r\n//           <Select\r\n//             defaultValue=\"level1\"\r\n//             style={{ width: 120 }}\r\n//             onChange={setContextLevel}\r\n//           >\r\n//             <Option value=\"level1\">Level 1 上下文</Option>\r\n//             <Option value=\"level2\">Level 2 上下文</Option>\r\n//           </Select>\r\n//         }\r\n//       >\r\n//         <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\r\n//           <List\r\n//             dataSource={messages}\r\n//             renderItem={(item) => (\r\n//               <List.Item style={{\r\n//                 padding: '12px 0',\r\n//                 justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\r\n//               }}>\r\n//                 <div style={{\r\n//                   display: 'flex',\r\n//                   flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\r\n//                   alignItems: 'flex-start',\r\n//                   gap: 12\r\n//                 }}>\r\n//                   <Avatar\r\n//                     icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\r\n//                     style={{\r\n//                       backgroundColor: item.sender === 'user' ? '#1890ff' : '#52c41a'\r\n//                     }}\r\n//                   />\r\n//                   <div style={{\r\n//                     maxWidth: '70%',\r\n//                     backgroundColor: item.sender === 'user' ? '#e6f7ff' : '#f6ffed',\r\n//                     padding: '8px 12px',\r\n//                     borderRadius: 4\r\n//                   }}>\r\n//                     {item.content}\r\n//                   </div>\r\n//                 </div>\r\n//               </List.Item>\r\n//             )}\r\n//           />\r\n//           <div ref={messagesEndRef} />\r\n//           {loading && (\r\n//             <div style={{ textAlign: 'center', padding: 12 }}>\r\n//               <Spin tip=\"AI导师正在思考...\" />\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//\r\n//         <div style={{ display: 'flex', gap: 8 }}>\r\n//           <TextArea\r\n//             value={inputValue}\r\n//             onChange={(e) => setInputValue(e.target.value)}\r\n//             placeholder=\"输入您的问题...\"\r\n//             autoSize={{ minRows: 2, maxRows: 6 }}\r\n//             onPressEnter={(e) => {\r\n//               if (!e.shiftKey) {\r\n//                 e.preventDefault();\r\n//                 handleSendMessage();\r\n//               }\r\n//             }}\r\n//           />\r\n//           <Button\r\n//             type=\"primary\"\r\n//             onClick={handleSendMessage}\r\n//             style={{ height: 'auto' }}\r\n//           >\r\n//             发送\r\n//           </Button>\r\n//         </div>\r\n//\r\n//         <Divider />\r\n//         <div>\r\n//           <h4>示例问题:</h4>\r\n//           <p>- \"请解释Python中的列表和元组的区别\"</p>\r\n//           <p>- \"机器学习中的监督学习和无监督学习有什么不同?\"</p>\r\n//           <p>- \"世界历史中的工业革命有哪些重要影响?\"</p>\r\n//         </div>\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default LearningChat;\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Input,\r\n  Button,\r\n  Card,\r\n  List,\r\n  Avatar,\r\n  Select,\r\n  Divider,\r\n  Spin,\r\n  message,\r\n  Form // 添加Form导入\r\n} from 'antd';\r\nimport { UserOutlined, RobotOutlined } from '@ant-design/icons';\r\nimport { streamChat } from '../services/api';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Item } = Form; // 获取Form.Item的快捷方式\r\n\r\nconst LearningChat = ({ showNotification }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [contextLevel, setContextLevel] = useState('level1');\r\n  const [contextId, setContextId] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [form] = Form.useForm(); // 初始化表单实例\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = {\r\n      content: inputValue,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    setMessages([...messages, userMessage]);\r\n    setInputValue('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      // 添加临时消息占位\r\n      setMessages(prev => [...prev, {\r\n        content: '...',\r\n        sender: 'bot',\r\n        timestamp: new Date().toISOString(),\r\n        isStreaming: true\r\n      }]);\r\n\r\n      // 这里需要根据实际的streamChat实现调整\r\n      const response = await streamChat(inputValue, contextLevel, contextId);\r\n\r\n      // 假设streamChat返回完整响应（实际可能是流式）\r\n      setMessages(prev => {\r\n        const last = prev[prev.length - 1];\r\n        if (last.isStreaming) {\r\n          return [...prev.slice(0, -1), {\r\n            ...last,\r\n            content: response.content || response,\r\n            isStreaming: false\r\n          }];\r\n        }\r\n        return prev;\r\n      });\r\n    } catch (error) {\r\n      showNotification('error', '发送失败', error.message);\r\n      setMessages(prev => [...prev, {\r\n        content: '抱歉，与AI导师通信时出错',\r\n        sender: 'bot',\r\n        timestamp: new Date().toISOString(),\r\n        isError: true\r\n      }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 800, margin: '0 auto' }}>\r\n      <Card\r\n        title=\"AI学习导师\"\r\n        extra={\r\n          <Select\r\n            defaultValue=\"level1\"\r\n            style={{ width: 120 }}\r\n            onChange={setContextLevel}\r\n          >\r\n            <Option value=\"level1\">Level 1 上下文</Option>\r\n            <Option value=\"level2\">Level 2 上下文</Option>\r\n          </Select>\r\n        }\r\n      >\r\n        <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\r\n          <List\r\n            dataSource={messages}\r\n            renderItem={(item) => (\r\n              <List.Item style={{\r\n                padding: '12px 0',\r\n                justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\r\n              }}>\r\n                <div style={{\r\n                  display: 'flex',\r\n                  flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\r\n                  alignItems: 'flex-start',\r\n                  gap: 12\r\n                }}>\r\n                  <Avatar\r\n                    icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\r\n                    style={{\r\n                      backgroundColor: item.sender === 'user' ? '#1890ff' : '#52c41a'\r\n                    }}\r\n                  />\r\n                  <div style={{\r\n                    maxWidth: '70%',\r\n                    backgroundColor: item.sender === 'user' ? '#e6f7ff' : '#f6ffed',\r\n                    padding: '8px 12px',\r\n                    borderRadius: 4,\r\n                    color: item.isError ? '#000000' : 'inherit'\r\n                  }}>\r\n                    {item.content}\r\n                  </div>\r\n                </div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n          <div ref={messagesEndRef} />\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', padding: 12 }}>\r\n              <Spin tip=\"AI导师正在思考...\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Form form={form} layout=\"vertical\">\r\n          <Item label=\"上下文ID\" name=\"contextId\" style={{ marginBottom: 8 }}>\r\n            <Input\r\n              placeholder=\"输入知识图谱ID (可选)\"\r\n              onChange={(e) => setContextId(e.target.value || null)}\r\n            />\r\n          </Item>\r\n          <Item>\r\n            <div style={{ display: 'flex', gap: 8 }}>\r\n              <TextArea\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                placeholder=\"输入您的问题...\"\r\n                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                onPressEnter={(e) => {\r\n                  if (!e.shiftKey) {\r\n                    e.preventDefault();\r\n                    handleSendMessage();\r\n                  }\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={handleSendMessage}\r\n                style={{ height: 'auto' }}\r\n                loading={loading}\r\n                disabled={loading}\r\n              >\r\n                发送\r\n              </Button>\r\n            </div>\r\n          </Item>\r\n        </Form>\r\n\r\n        <Divider />\r\n        <div>\r\n          <h4>示例问题:</h4>\r\n          <p>- \"请解释Python中的列表和元组的区别\"</p>\r\n          <p>- \"机器学习中的监督学习和无监督学习有什么不同?\"</p>\r\n          <p>- \"世界历史中的工业革命有哪些重要影响?\"</p>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearningChat;"],"mappingsb,SAASC,YAAY,EAAEC,aAAa,QAAQ,mBAAmB;AAC/D,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAM;EAAEC;AAAS,CAAC,GAAGf,KAAK;AAC1B,MAAM;EAAEgB;AAAO,CAAC,GAAGX,MAAM;AACzB,MAAM;EAAEY;AAAK,CAAC,GAAGR,IAAI,CAAC,CAAC;;AAEvB,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMkC,cAAc,GAAGjC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACkC,IAAI,CAAC,GAAGvB,IAAI,CAACwB,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAJ,cAAc,CAACK,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACdmC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAChB,UAAU,CAACiB,IAAI,CAAC,CAAC,EAAE;IAExB,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAEnB,UAAU;MACnBoB,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAEDxB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEoB,WAAW,CAAC,CAAC;IACvCjB,aAAa,CAAC,EAAE,CAAC;IACjBE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACAJ,WAAW,CAACyB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BL,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCE,WAAW,EAAE;MACf,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMC,QAAQ,GAAG,MAAMrC,UAAU,CAACW,UAAU,EAAEI,YAAY,EAAEE,SAAS,CAAC;;MAEtE;MACAP,WAAW,CAACyB,IAAI,IAAI;QAClB,MAAMG,IAAI,GAAGH,IAAI,CAACA,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;QAClC,IAAID,IAAI,CAACF,WAAW,EAAE;UACpB,OAAO,CAAC,GAAGD,IAAI,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YAC5B,GAAGF,IAAI;YACPR,OAAO,EAAEO,QAAQ,CAACP,OAAO,IAAIO,QAAQ;YACrCD,WAAW,EAAE;UACf,CAAC,CAAC;QACJ;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdlC,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAEkC,KAAK,CAAC7C,OAAO,CAAC;MAChDc,WAAW,CAACyB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BL,OAAO,EAAE,eAAe;QACxBC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCQ,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACR5B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKyC,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,eAC9C5C,OAAA,CAACZ,IAAI;MACHyD,KAAK,EAAC,4BAAQ;MACdC,KAAK,eACH9C,OAAA,CAACT,MAAM;QACLwD,YAAY,EAAC,QAAQ;QACrBN,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAI,CAAE;QACtBC,QAAQ,EAAEnC,eAAgB;QAAA8B,QAAA,gBAE1B5C,OAAA,CAACE,MAAM;UAACgD,KAAK,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CtD,OAAA,CAACE,MAAM;UAACgD,KAAK,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CACT;MAAAV,QAAA,gBAED5C,OAAA;QAAKyC,KAAK,EAAE;UAAEc,MAAM,EAAE,GAAG;UAAEC,SAAS,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAG,CAAE;QAAAb,QAAA,gBAC/D5C,OAAA,CAACX,IAAI;UACHqE,UAAU,EAAEnD,QAAS;UACrBoD,UAAU,EAAGC,IAAI,iBACf5D,OAAA,CAACX,IAAI,CAACc,IAAI;YAACsC,KAAK,EAAE;cAChBoB,OAAO,EAAE,QAAQ;cACjBC,cAAc,EAAEF,IAAI,CAAC/B,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG;YACxD,CAAE;YAAAe,QAAA,eACA5C,OAAA;cAAKyC,KAAK,EAAE;gBACVsB,OAAO,EAAE,MAAM;gBACfC,aAAa,EAAEJ,IAAI,CAAC/B,MAAM,KAAK,MAAM,GAAG,aAAa,GAAG,KAAK;gBAC7DoC,UAAU,EAAE,YAAY;gBACxBC,GAAG,EAAE;cACP,CAAE;cAAAtB,QAAA,gBACA5C,OAAA,CAACV,MAAM;gBACL6E,IAAI,EAAEP,IAAI,CAAC/B,MAAM,KAAK,MAAM,gBAAG7B,OAAA,CAACJ,YAAY;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGtD,OAAA,CAACH,aAAa;kBAAAsD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACpEb,KAAK,EAAE;kBACL2B,eAAe,EAAER,IAAI,CAAC/B,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG;gBACxD;cAAE;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACFtD,OAAA;gBAAKyC,KAAK,EAAE;kBACVC,QAAQ,EAAE,KAAK;kBACf0B,eAAe,EAAER,IAAI,CAAC/B,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;kBAC/DgC,OAAO,EAAE,UAAU;kBACnBQ,YAAY,EAAE,CAAC;kBACfC,KAAK,EAAEV,IAAI,CAACpB,OAAO,GAAG,SAAS,GAAG;gBACpC,CAAE;gBAAAI,QAAA,EACCgB,IAAI,CAAChC;cAAO;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QACX;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFtD,OAAA;UAAKuE,GAAG,EAAEtD;QAAe;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3B3C,OAAO,iBACNX,OAAA;UAAKyC,KAAK,EAAE;YAAE+B,SAAS,EAAE,QAAQ;YAAEX,OAAO,EAAE;UAAG,CAAE;UAAAjB,QAAA,eAC/C5C,OAAA,CAACP,IAAI;YAACgF,GAAG,EAAC;UAAa;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENtD,OAAA,CAACL,IAAI;QAACuB,IAAI,EAAEA,IAAK;QAACwD,MAAM,EAAC,UAAU;QAAA9B,QAAA,gBACjC5C,OAAA,CAACG,IAAI;UAACwE,KAAK,EAAC,sBAAO;UAACC,IAAI,EAAC,WAAW;UAACnC,KAAK,EAAE;YAAEgB,YAAY,EAAE;UAAE,CAAE;UAAAb,QAAA,eAC9D5C,OAAA,CAACd,KAAK;YACJ2F,WAAW,EAAC,uDAAe;YAC3B5B,QAAQ,EAAG6B,CAAC,IAAK9D,YAAY,CAAC8D,CAAC,CAACC,MAAM,CAAC7B,KAAK,IAAI,IAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPtD,OAAA,CAACG,IAAI;UAAAyC,QAAA,eACH5C,OAAA;YAAKyC,KAAK,EAAE;cAAEsB,OAAO,EAAE,MAAM;cAAEG,GAAG,EAAE;YAAE,CAAE;YAAAtB,QAAA,gBACtC5C,OAAA,CAACC,QAAQ;cACPiD,KAAK,EAAEzC,UAAW;cAClBwC,QAAQ,EAAG6B,CAAC,IAAKpE,aAAa,CAACoE,CAAC,CAACC,MAAM,CAAC7B,KAAK,CAAE;cAC/C2B,WAAW,EAAC,yCAAW;cACvBG,QAAQ,EAAE;gBAAEC,OAAO,EAAE,CAAC;gBAAEC,OAAO,EAAE;cAAE,CAAE;cACrCC,YAAY,EAAGL,CAAC,IAAK;gBACnB,IAAI,CAACA,CAAC,CAACM,QAAQ,EAAE;kBACfN,CAAC,CAACO,cAAc,CAAC,CAAC;kBAClB5D,iBAAiB,CAAC,CAAC;gBACrB;cACF;YAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFtD,OAAA,CAACb,MAAM;cACLmG,IAAI,EAAC,SAAS;cACdC,OAAO,EAAE9D,iBAAkB;cAC3BgB,KAAK,EAAE;gBAAEc,MAAM,EAAE;cAAO,CAAE;cAC1B5C,OAAO,EAAEA,OAAQ;cACjB6E,QAAQ,EAAE7E,OAAQ;cAAAiC,QAAA,EACnB;YAED;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPtD,OAAA,CAACR,OAAO;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXtD,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAA4C,QAAA,EAAI;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdtD,OAAA;UAAA4C,QAAA,EAAG;QAAuB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9BtD,OAAA;UAAA4C,QAAA,EAAG;QAA0B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjCtD,OAAA;UAAA4C,QAAA,EAAG;QAAsB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChD,EAAA,CAvKIF,YAAY;EAAA,QAODT,IAAI,CAACwB,OAAO;AAAA;AAAAsE,EAAA,GAPvBrF,YAAY;AAyKlB,eAAeA,YAAY;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}