{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Layout, Menu, Spin, notification } from 'antd';\n// import {\n//   BookOutlined,\n//   PlusOutlined,\n//   MessageOutlined,\n//   DashboardOutlined\n// } from '@ant-design/icons';\n// import GraphBrowser from './components/GraphBrowser';\n// import GraphCreator from './components/GraphCreator';\n// import LearningChat from './components/LearningChat';\n// import TaskMonitor from './components/TaskMonitor';\n// import './index.css';\n//\n// const { Header, Content, Sider }\n//     = Layout;\n//\n// function App() {\n//   const [activeTab, setActiveTab] = useState('browse');\n//   const [loading, setLoading] = useState(false);\n//   const [tasks, setTasks] = useState([]);\n//\n//   const addTask = (task) => {\n//     setTasks([...tasks, task]);\n//   };\n//\n//   const updateTask = (taskId, updates) => {\n//     setTasks(tasks.map(task =>\n//       task.task_id === taskId ? { ...task, ...updates } : task\n//     ));\n//   };\n//\n//   const showNotification = (type, message, description) => {\n//     notification[type]({\n//       message,\n//       description,\n//       placement: 'bottomRight'\n//     });\n//   };\n//\n//   return (\n//     <Layout style={{ minHeight: '100vh' }}>\n//       <Header className=\"header\">\n//         <div className=\"logo\">自适应学习路径规划系统</div>\n//       </Header>\n//       <Layout>\n//         <Sider width={200} className=\"site-layout-background\">\n//           <Menu\n//             mode=\"inline\"\n//             selectedKeys={[activeTab]}\n//             style={{ height: '100%', borderRight: 0 }}\n//             onSelect={({ key }) => setActiveTab(key)}\n//           >\n//             <Menu.Item key=\"browse\" icon={<BookOutlined />}>\n//               浏览知识图谱\n//             </Menu.Item>\n//             <Menu.Item key=\"create\" icon={<PlusOutlined />}>\n//               创建新图谱\n//             </Menu.Item>\n//             <Menu.Item key=\"learn\" icon={<MessageOutlined />}>\n//               学习对话\n//             </Menu.Item>\n//             <Menu.Item key=\"tasks\" icon={<DashboardOutlined />}>\n//               任务监控\n//             </Menu.Item>\n//           </Menu>\n//         </Sider>\n//         <Layout style={{ padding: '0 24px 24px' }}>\n//           <Content\n//             className=\"site-layout-background\"\n//             style={{\n//               padding: 24,\n//               margin: 0,\n//               minHeight: 280,\n//             }}\n//           >\n//             {loading ? (\n//               <div style={{ textAlign: 'center', padding: '50px' }}>\n//                 <Spin size=\"large\" />\n//               </div>\n//             ) : (\n//               <>\n//                 {activeTab === 'browse' && <GraphBrowser showNotification={showNotification} />}\n//                 {activeTab === 'create' && (\n//                   <GraphCreator\n//                     addTask={addTask}\n//                     showNotification={showNotification}\n//                   />\n//                 )}\n//                 {activeTab === 'learn' && <LearningChat showNotification={showNotification} />}\n//                 {activeTab === 'tasks' && (\n//                   <TaskMonitor\n//                     tasks={tasks}\n//                     updateTask={updateTask}\n//                     showNotification={showNotification}\n//                   />\n//                 )}\n//               </>\n//             )}\n//           </Content>\n//         </Layout>\n//       </Layout>\n//     </Layout>\n//   );\n// }\n//\n// export default App;\n//\n// import React, { useState } from 'react';\n// import { Layout, Menu, Spin, notification } from 'antd';\n// import {\n//   BookOutlined,\n//   PlusOutlined,\n//   MessageOutlined,\n//   DashboardOutlined\n// } from '@ant-design/icons';\n// import GraphBrowser from './components/GraphBrowser';\n// import GraphCreator from './components/GraphCreator';\n// import LearningChat from './components/LearningChat';\n// import TaskMonitor from './components/TaskMonitor';\n// import './index.css';\n//\n// const { Header, Content } = Layout;\n//\n// function App() {\n//   const [activeTab, setActiveTab] = useState('browse');\n//   const [loading, setLoading] = useState(false);\n//   const [tasks, setTasks] = useState([]);\n//\n//   const addTask = (task) => {\n//     setTasks([...tasks, task]);\n//   };\n//\n//   const updateTask = (taskId, updates) => {\n//     setTasks(tasks.map(task =>\n//       task.task_id === taskId ? { ...task, ...updates } : task\n//     ));\n//   };\n//\n//   const showNotification = (type, message, description) => {\n//     notification[type]({\n//       message,\n//       description,\n//       placement: 'bottomRight'\n//     });\n//   };\n//\n//   return (\n//     <Layout style={{ minHeight: '100vh' }}>\n//       <Header className=\"header\">\n//         <div className=\"logo\">自适应学习路径规划系统</div>\n//         <Menu\n//           theme=\"dark\"\n//           mode=\"horizontal\"\n//           selectedKeys={[activeTab]}\n//           style={{ lineHeight: '64px', display: 'flex', justifyContent: 'center' }}\n//           onSelect={({ key }) => setActiveTab(key)}\n//         >\n//           <Menu.Item key=\"browse\" icon={<BookOutlined />}>\n//             浏览知识图谱\n//           </Menu.Item>\n//           <Menu.Item key=\"create\" icon={<PlusOutlined />}>\n//             创建新图谱\n//           </Menu.Item>\n//           <Menu.Item key=\"learn\" icon={<MessageOutlined />}>\n//             学习对话\n//           </Menu.Item>\n//           <Menu.Item key=\"tasks\" icon={<DashboardOutlined />}>\n//             任务监控\n//           </Menu.Item>\n//         </Menu>\n//       </Header>\n//       <Layout>\n//         <Content\n//           className=\"site-layout-background\"\n//           style={{\n//             padding: 24,\n//             margin: 0,\n//             minHeight: 280,\n//           }}\n//         >\n//           {loading ? (\n//             <div style={{ textAlign: 'center', padding: '50px' }}>\n//               <Spin size=\"large\" />\n//             </div>\n//           ) : (\n//             <>\n//               {activeTab === 'browse' && <GraphBrowser showNotification={showNotification} />}\n//               {activeTab === 'create' && (\n//                 <GraphCreator\n//                   addTask={addTask}\n//                   showNotification={showNotification}\n//                 />\n//               )}\n//               {activeTab === 'learn' && <LearningChat showNotification={showNotification} />}\n//               {activeTab === 'tasks' && (\n//                 <TaskMonitor\n//                   tasks={tasks}\n//                   updateTask={updateTask}\n//                   showNotification={showNotification}\n//                 />\n//               )}\n//             </>\n//           )}\n//         </Content>\n//       </Layout>\n//     </Layout>\n//   );\n// }\n//\n// export default App;","map":{"version":3,"names":[],"sources":["G:/Python/ALPSF/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Layout, Menu, Spin, notification } from 'antd';\r\n// import {\r\n//   BookOutlined,\r\n//   PlusOutlined,\r\n//   MessageOutlined,\r\n//   DashboardOutlined\r\n// } from '@ant-design/icons';\r\n// import GraphBrowser from './components/GraphBrowser';\r\n// import GraphCreator from './components/GraphCreator';\r\n// import LearningChat from './components/LearningChat';\r\n// import TaskMonitor from './components/TaskMonitor';\r\n// import './index.css';\r\n//\r\n// const { Header, Content, Sider }\r\n//     = Layout;\r\n//\r\n// function App() {\r\n//   const [activeTab, setActiveTab] = useState('browse');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [tasks, setTasks] = useState([]);\r\n//\r\n//   const addTask = (task) => {\r\n//     setTasks([...tasks, task]);\r\n//   };\r\n//\r\n//   const updateTask = (taskId, updates) => {\r\n//     setTasks(tasks.map(task =>\r\n//       task.task_id === taskId ? { ...task, ...updates } : task\r\n//     ));\r\n//   };\r\n//\r\n//   const showNotification = (type, message, description) => {\r\n//     notification[type]({\r\n//       message,\r\n//       description,\r\n//       placement: 'bottomRight'\r\n//     });\r\n//   };\r\n//\r\n//   return (\r\n//     <Layout style={{ minHeight: '100vh' }}>\r\n//       <Header className=\"header\">\r\n//         <div className=\"logo\">自适应学习路径规划系统</div>\r\n//       </Header>\r\n//       <Layout>\r\n//         <Sider width={200} className=\"site-layout-background\">\r\n//           <Menu\r\n//             mode=\"inline\"\r\n//             selectedKeys={[activeTab]}\r\n//             style={{ height: '100%', borderRight: 0 }}\r\n//             onSelect={({ key }) => setActiveTab(key)}\r\n//           >\r\n//             <Menu.Item key=\"browse\" icon={<BookOutlined />}>\r\n//               浏览知识图谱\r\n//             </Menu.Item>\r\n//             <Menu.Item key=\"create\" icon={<PlusOutlined />}>\r\n//               创建新图谱\r\n//             </Menu.Item>\r\n//             <Menu.Item key=\"learn\" icon={<MessageOutlined />}>\r\n//               学习对话\r\n//             </Menu.Item>\r\n//             <Menu.Item key=\"tasks\" icon={<DashboardOutlined />}>\r\n//               任务监控\r\n//             </Menu.Item>\r\n//           </Menu>\r\n//         </Sider>\r\n//         <Layout style={{ padding: '0 24px 24px' }}>\r\n//           <Content\r\n//             className=\"site-layout-background\"\r\n//             style={{\r\n//               padding: 24,\r\n//               margin: 0,\r\n//               minHeight: 280,\r\n//             }}\r\n//           >\r\n//             {loading ? (\r\n//               <div style={{ textAlign: 'center', padding: '50px' }}>\r\n//                 <Spin size=\"large\" />\r\n//               </div>\r\n//             ) : (\r\n//               <>\r\n//                 {activeTab === 'browse' && <GraphBrowser showNotification={showNotification} />}\r\n//                 {activeTab === 'create' && (\r\n//                   <GraphCreator\r\n//                     addTask={addTask}\r\n//                     showNotification={showNotification}\r\n//                   />\r\n//                 )}\r\n//                 {activeTab === 'learn' && <LearningChat showNotification={showNotification} />}\r\n//                 {activeTab === 'tasks' && (\r\n//                   <TaskMonitor\r\n//                     tasks={tasks}\r\n//                     updateTask={updateTask}\r\n//                     showNotification={showNotification}\r\n//                   />\r\n//                 )}\r\n//               </>\r\n//             )}\r\n//           </Content>\r\n//         </Layout>\r\n//       </Layout>\r\n//     </Layout>\r\n//   );\r\n// }\r\n//\r\n// export default App;\r\n//\r\n// import React, { useState } from 'react';\r\n// import { Layout, Menu, Spin, notification } from 'antd';\r\n// import {\r\n//   BookOutlined,\r\n//   PlusOutlined,\r\n//   MessageOutlined,\r\n//   DashboardOutlined\r\n// } from '@ant-design/icons';\r\n// import GraphBrowser from './components/GraphBrowser';\r\n// import GraphCreator from './components/GraphCreator';\r\n// import LearningChat from './components/LearningChat';\r\n// import TaskMonitor from './components/TaskMonitor';\r\n// import './index.css';\r\n//\r\n// const { Header, Content } = Layout;\r\n//\r\n// function App() {\r\n//   const [activeTab, setActiveTab] = useState('browse');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [tasks, setTasks] = useState([]);\r\n//\r\n//   const addTask = (task) => {\r\n//     setTasks([...tasks, task]);\r\n//   };\r\n//\r\n//   const updateTask = (taskId, updates) => {\r\n//     setTasks(tasks.map(task =>\r\n//       task.task_id === taskId ? { ...task, ...updates } : task\r\n//     ));\r\n//   };\r\n//\r\n//   const showNotification = (type, message, description) => {\r\n//     notification[type]({\r\n//       message,\r\n//       description,\r\n//       placement: 'bottomRight'\r\n//     });\r\n//   };\r\n//\r\n//   return (\r\n//     <Layout style={{ minHeight: '100vh' }}>\r\n//       <Header className=\"header\">\r\n//         <div className=\"logo\">自适应学习路径规划系统</div>\r\n//         <Menu\r\n//           theme=\"dark\"\r\n//           mode=\"horizontal\"\r\n//           selectedKeys={[activeTab]}\r\n//           style={{ lineHeight: '64px', display: 'flex', justifyContent: 'center' }}\r\n//           onSelect={({ key }) => setActiveTab(key)}\r\n//         >\r\n//           <Menu.Item key=\"browse\" icon={<BookOutlined />}>\r\n//             浏览知识图谱\r\n//           </Menu.Item>\r\n//           <Menu.Item key=\"create\" icon={<PlusOutlined />}>\r\n//             创建新图谱\r\n//           </Menu.Item>\r\n//           <Menu.Item key=\"learn\" icon={<MessageOutlined />}>\r\n//             学习对话\r\n//           </Menu.Item>\r\n//           <Menu.Item key=\"tasks\" icon={<DashboardOutlined />}>\r\n//             任务监控\r\n//           </Menu.Item>\r\n//         </Menu>\r\n//       </Header>\r\n//       <Layout>\r\n//         <Content\r\n//           className=\"site-layout-background\"\r\n//           style={{\r\n//             padding: 24,\r\n//             margin: 0,\r\n//             minHeight: 280,\r\n//           }}\r\n//         >\r\n//           {loading ? (\r\n//             <div style={{ textAlign: 'center', padding: '50px' }}>\r\n//               <Spin size=\"large\" />\r\n//             </div>\r\n//           ) : (\r\n//             <>\r\n//               {activeTab === 'browse' && <GraphBrowser showNotification={showNotification} />}\r\n//               {activeTab === 'create' && (\r\n//                 <GraphCreator\r\n//                   addTask={addTask}\r\n//                   showNotification={showNotification}\r\n//                 />\r\n//               )}\r\n//               {activeTab === 'learn' && <LearningChat showNotification={showNotification} />}\r\n//               {activeTab === 'tasks' && (\r\n//                 <TaskMonitor\r\n//                   tasks={tasks}\r\n//                   updateTask={updateTask}\r\n//                   showNotification={showNotification}\r\n//                 />\r\n//               )}\r\n//             </>\r\n//           )}\r\n//         </Content>\r\n//       </Layout>\r\n//     </Layout>\r\n//   );\r\n// }\r\n//\r\n// export default App;\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}