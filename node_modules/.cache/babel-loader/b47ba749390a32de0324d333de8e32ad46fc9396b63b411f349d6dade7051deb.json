{"ast":null,"code":"var _jsxFileName = \"G:\\\\Python\\\\ALPSF\\\\src\\\\components\\\\TaskMonitor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, Card, Tag, Button, Badge, Spin, Empty, Popover, Progress } from 'antd';\nimport { ClockCircleOutlined, CheckCircleOutlined, CloseCircleOutlined, SyncOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getTaskStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_POLLING_ATTEMPTS = 60; // 最大轮询次数（5分钟）\nconst POLLING_INTERVAL = 5000; // 轮询间隔5秒\n\nconst TaskMonitor = ({\n  tasks,\n  updateTask,\n  showNotification\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [pollingCounts, setPollingCounts] = useState({});\n  const [pollingInterval, setPollingInterval] = useState(null);\n\n  // 更新轮询计数\n  const incrementPollingCount = taskId => {\n    setPollingCounts(prev => ({\n      ...prev,\n      [taskId]: (prev[taskId] || 0) + 1\n    }));\n  };\n\n  // 检查单个任务状态\n  const checkSingleTaskStatus = async task => {\n    if (task.status !== 'processing') return;\n    try {\n      incrementPollingCount(task.task_id);\n      const status = await getTaskStatus(task.task_id);\n      if (status.error) {\n        updateTask(task.task_id, {\n          status: 'failed',\n          message: status.error,\n          updatedAt: Date.now()\n        });\n      } else if (status.completed) {\n        updateTask(task.task_id, {\n          status: 'completed',\n          message: status.message || '任务完成',\n          result: status.result,\n          updatedAt: Date.now()\n        });\n      }\n      // 其他状态保持processing不变\n    } catch (error) {\n      console.error(`检查任务 ${task.task_id} 状态失败:`, error);\n      // 不更新任务状态，等待下次轮询\n    }\n  };\n\n  // 检查所有任务状态\n  const checkTasksStatus = async () => {\n    setLoading(true);\n    try {\n      const processingTasks = tasks.filter(t => t.status === 'processing');\n      await Promise.all(processingTasks.map(checkSingleTaskStatus));\n    } catch (error) {\n      showNotification('error', '状态检查失败', '获取任务状态时出错');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 启动/停止轮询\n  useEffect(() => {\n    const hasProcessingTasks = tasks.some(t => t.status === 'processing');\n    const hasExceededLimits = tasks.some(t => t.status === 'processing' && pollingCounts[t.task_id] >= MAX_POLLING_ATTEMPTS);\n    if (hasProcessingTasks && !hasExceededLimits) {\n      const interval = setInterval(checkTasksStatus, POLLING_INTERVAL);\n      setPollingInterval(interval);\n\n      // 立即执行一次检查\n      checkTasksStatus();\n      return () => clearInterval(interval);\n    } else if (hasExceededLimits) {\n      // 处理超时任务\n      tasks.forEach(task => {\n        if (pollingCounts[task.task_id] >= MAX_POLLING_ATTEMPTS && task.status === 'processing') {\n          updateTask(task.task_id, {\n            status: 'failed',\n            message: '任务处理超时',\n            updatedAt: Date.now()\n          });\n        }\n      });\n      if (pollingInterval) {\n        clearInterval(pollingInterval);\n        setPollingInterval(null);\n      }\n    }\n  }, [tasks, pollingCounts]);\n\n  // 状态标签\n  const getStatusTag = status => {\n    switch (status) {\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }, this),\n          color: \"processing\",\n          children: \"\\u8FDB\\u884C\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 27\n          }, this),\n          color: \"success\",\n          children: \"\\u5DF2\\u5B8C\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 16\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 27\n          }, this),\n          color: \"error\",\n          children: \"\\u5931\\u8D25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          icon: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 27\n          }, this),\n          color: \"default\",\n          children: \"\\u7B49\\u5F85\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // 任务持续时间计算\n  const getDuration = task => {\n    if (!task.createdAt) return '';\n    const endTime = task.updatedAt || Date.now();\n    const duration = Math.floor((endTime - task.createdAt) / 1000);\n    return `${duration}秒`;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u540E\\u53F0\\u4EFB\\u52A1\\u76D1\\u63A7\",\n    extra: /*#__PURE__*/_jsxDEV(Button, {\n      icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 28\n      }, this),\n      onClick: checkTasksStatus,\n      children: \"\\u624B\\u52A8\\u5237\\u65B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 14\n    }, this),\n    loading: loading,\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Empty, {\n      description: \"\\u6682\\u65E0\\u8FDB\\u884C\\u4E2D\\u7684\\u4EFB\\u52A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      dataSource: tasks,\n      renderItem: task => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Badge, {\n            status: task.status === 'processing' ? 'processing' : task.status === 'completed' ? 'success' : 'error'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this),\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [task.type, \": \", task.keyword]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), task.status === 'processing' && /*#__PURE__*/_jsxDEV(Popover, {\n              content: `已轮询 ${pollingCounts[task.task_id] || 0}次`,\n              children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n                style: {\n                  marginLeft: 8,\n                  color: '#1890ff'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this),\n          description: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u4EFB\\u52A1ID: \", task.task_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u72B6\\u6001: \", getStatusTag(task.status), \" \", task.status === 'processing' && /*#__PURE__*/_jsxDEV(Progress, {\n                percent: Math.min(100, (pollingCounts[task.task_id] || 0) / MAX_POLLING_ATTEMPTS * 100),\n                size: \"small\",\n                status: \"active\",\n                style: {\n                  width: 200,\n                  display: 'inline-block',\n                  marginLeft: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6301\\u7EED\\u65F6\\u95F4: \", getDuration(task)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this), task.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6D88\\u606F: \", task.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 38\n            }, this), task.parent_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u7236\\u56FE\\u8C31ID: \", task.parent_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskMonitor, \"zofbA1h6KmYzPpXt/lHI4RxcQag=\");\n_c = TaskMonitor;\nexport default TaskMonitor;\nvar _c;\n$RefreshReg$(_c, \"TaskMonitor\");","map":{"version":3,"names":["React","useState","useEffect","List","Card","Tag","Button","Badge","Spin","Empty","Popover","Progress","ClockCircleOutlined","CheckCircleOutlined","CloseCircleOutlined","SyncOutlined","InfoCircleOutlined","getTaskStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","MAX_POLLING_ATTEMPTS","POLLING_INTERVAL","TaskMonitor","tasks","updateTask","showNotification","_s","loading","setLoading","pollingCounts","setPollingCounts","pollingInterval","setPollingInterval","incrementPollingCount","taskId","prev","checkSingleTaskStatus","task","status","task_id","error","message","updatedAt","Date","now","completed","result","console","checkTasksStatus","processingTasks","filter","t","Promise","all","map","hasProcessingTasks","some","hasExceededLimits","interval","setInterval","clearInterval","forEach","getStatusTag","icon","spin","fileName","_jsxFileName","lineNumber","columnNumber","color","children","getDuration","createdAt","endTime","duration","Math","floor","title","extra","onClick","length","description","dataSource","renderItem","Item","Meta","avatar","style","display","alignItems","type","keyword","content","marginLeft","percent","min","size","width","parent_id","_c","$RefreshReg$"],"sources":["G:/Python/ALPSF/src/components/TaskMonitor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, Card, Tag, Button, Badge, Spin, Empty, Popover, Progress } from 'antd';\r\nimport {\r\n  ClockCircleOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  SyncOutlined,\r\n  InfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport { getTaskStatus } from '../services/api';\r\n\r\nconst MAX_POLLING_ATTEMPTS = 60; // 最大轮询次数（5分钟）\r\nconst POLLING_INTERVAL = 5000; // 轮询间隔5秒\r\n\r\nconst TaskMonitor = ({ tasks, updateTask, showNotification }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [pollingCounts, setPollingCounts] = useState({});\r\n  const [pollingInterval, setPollingInterval] = useState(null);\r\n\r\n  // 更新轮询计数\r\n  const incrementPollingCount = (taskId) => {\r\n    setPollingCounts(prev => ({\r\n      ...prev,\r\n      [taskId]: (prev[taskId] || 0) + 1\r\n    }));\r\n  };\r\n\r\n  // 检查单个任务状态\r\n  const checkSingleTaskStatus = async (task) => {\r\n    if (task.status !== 'processing') return;\r\n\r\n    try {\r\n      incrementPollingCount(task.task_id);\r\n      const status = await getTaskStatus(task.task_id);\r\n\r\n      if (status.error) {\r\n        updateTask(task.task_id, {\r\n          status: 'failed',\r\n          message: status.error,\r\n          updatedAt: Date.now()\r\n        });\r\n      } else if (status.completed) {\r\n        updateTask(task.task_id, {\r\n          status: 'completed',\r\n          message: status.message || '任务完成',\r\n          result: status.result,\r\n          updatedAt: Date.now()\r\n        });\r\n      }\r\n      // 其他状态保持processing不变\r\n    } catch (error) {\r\n      console.error(`检查任务 ${task.task_id} 状态失败:`, error);\r\n      // 不更新任务状态，等待下次轮询\r\n    }\r\n  };\r\n\r\n  // 检查所有任务状态\r\n  const checkTasksStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const processingTasks = tasks.filter(t => t.status === 'processing');\r\n      await Promise.all(processingTasks.map(checkSingleTaskStatus));\r\n    } catch (error) {\r\n      showNotification('error', '状态检查失败', '获取任务状态时出错');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 启动/停止轮询\r\n  useEffect(() => {\r\n    const hasProcessingTasks = tasks.some(t => t.status === 'processing');\r\n    const hasExceededLimits = tasks.some(t =>\r\n      t.status === 'processing' && pollingCounts[t.task_id] >= MAX_POLLING_ATTEMPTS\r\n    );\r\n\r\n    if (hasProcessingTasks && !hasExceededLimits) {\r\n      const interval = setInterval(checkTasksStatus, POLLING_INTERVAL);\r\n      setPollingInterval(interval);\r\n\r\n      // 立即执行一次检查\r\n      checkTasksStatus();\r\n\r\n      return () => clearInterval(interval);\r\n    } else if (hasExceededLimits) {\r\n      // 处理超时任务\r\n      tasks.forEach(task => {\r\n        if (pollingCounts[task.task_id] >= MAX_POLLING_ATTEMPTS && task.status === 'processing') {\r\n          updateTask(task.task_id, {\r\n            status: 'failed',\r\n            message: '任务处理超时',\r\n            updatedAt: Date.now()\r\n          });\r\n        }\r\n      });\r\n\r\n      if (pollingInterval) {\r\n        clearInterval(pollingInterval);\r\n        setPollingInterval(null);\r\n      }\r\n    }\r\n  }, [tasks, pollingCounts]);\r\n\r\n  // 状态标签\r\n  const getStatusTag = (status) => {\r\n    switch (status) {\r\n      case 'processing':\r\n        return <Tag icon={<SyncOutlined spin />} color=\"processing\">进行中</Tag>;\r\n      case 'completed':\r\n        return <Tag icon={<CheckCircleOutlined />} color=\"success\">已完成</Tag>;\r\n      case 'failed':\r\n        return <Tag icon={<CloseCircleOutlined />} color=\"error\">失败</Tag>;\r\n      default:\r\n        return <Tag icon={<ClockCircleOutlined />} color=\"default\">等待中</Tag>;\r\n    }\r\n  };\r\n\r\n  // 任务持续时间计算\r\n  const getDuration = (task) => {\r\n    if (!task.createdAt) return '';\r\n    const endTime = task.updatedAt || Date.now();\r\n    const duration = Math.floor((endTime - task.createdAt) / 1000);\r\n    return `${duration}秒`;\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title=\"后台任务监控\"\r\n      extra={<Button icon={<SyncOutlined />} onClick={checkTasksStatus}>手动刷新</Button>}\r\n      loading={loading}\r\n    >\r\n      {tasks.length === 0 ? (\r\n        <Empty description=\"暂无进行中的任务\" />\r\n      ) : (\r\n        <List\r\n          dataSource={tasks}\r\n          renderItem={(task) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Badge\r\n                    status={\r\n                      task.status === 'processing' ? 'processing' :\r\n                      task.status === 'completed' ? 'success' : 'error'\r\n                    }\r\n                  />\r\n                }\r\n                title={\r\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span>{task.type}: {task.keyword}</span>\r\n                    {task.status === 'processing' && (\r\n                      <Popover content={`已轮询 ${pollingCounts[task.task_id] || 0}次`}>\r\n                        <InfoCircleOutlined style={{ marginLeft: 8, color: '#1890ff' }} />\r\n                      </Popover>\r\n                    )}\r\n                  </div>\r\n                }\r\n                description={\r\n                  <>\r\n                    <div>任务ID: {task.task_id}</div>\r\n                    <div>状态: {getStatusTag(task.status)} {task.status === 'processing' && (\r\n                      <Progress percent={Math.min(100, ((pollingCounts[task.task_id] || 0) / MAX_POLLING_ATTEMPTS * 100))}\r\n                        size=\"small\"\r\n                        status=\"active\"\r\n                        style={{ width: 200, display: 'inline-block', marginLeft: 10 }}\r\n                      />\r\n                    )}</div>\r\n                    <div>持续时间: {getDuration(task)}</div>\r\n                    {task.message && <div>消息: {task.message}</div>}\r\n                    {task.parent_id && <div>父图谱ID: {task.parent_id}</div>}\r\n                  </>\r\n                }\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskMonitor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}