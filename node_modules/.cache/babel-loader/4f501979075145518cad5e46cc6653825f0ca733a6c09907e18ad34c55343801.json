{"ast":null,"code":"var _jsxFileName = \"G:\\\\Python\\\\ALPSF\\\\src\\\\components\\\\LearningChat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import {\n//   Input,\n//   Button,\n//   Card,\n//   List,\n//   Avatar,\n//   Select,\n//   Divider,\n//   Spin,\n//   message,\n//   Form // 添加Form导入\n// } from 'antd';\n// import { UserOutlined, RobotOutlined } from '@ant-design/icons';\n// import { streamChat } from '../services/api';\n//\n// const { TextArea } = Input;\n// const { Option } = Select;\n// const { Item } = Form; // 获取Form.Item的快捷方式\n//\n// const LearningChat = ({ showNotification }) => {\n//   const [messages, setMessages] = useState([]);\n//   const [inputValue, setInputValue] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [contextLevel, setContextLevel] = useState('level1');\n//   const [contextId, setContextId] = useState(null);\n//   const messagesEndRef = useRef(null);\n//   const [form] = Form.useForm(); // 初始化表单实例\n//\n//   const handleSendMessage = async () => {\n//     if (!inputValue.trim()) return;\n//\n//     const userMessage = {\n//       content: inputValue,\n//       sender: 'user',\n//       timestamp: new Date().toISOString()\n//     };\n//\n//     setMessages([...messages, userMessage]);\n//     setInputValue('');\n//     setLoading(true);\n//\n//     try {\n//       // 添加临时消息占位\n//       setMessages(prev => [...prev, {\n//         content: '...',\n//         sender: 'bot',\n//         timestamp: new Date().toISOString(),\n//         isStreaming: true\n//       }]);\n//\n//       // 这里需要根据实际的streamChat实现调整\n//       const response = await streamChat(inputValue, contextLevel, contextId);\n//\n//       // 假设streamChat返回完整响应（实际可能是流式）\n//       setMessages(prev => {\n//         const last = prev[prev.length - 1];\n//         if (last.isStreaming) {\n//           return [...prev.slice(0, -1), {\n//             ...last,\n//             content: response.content || response,\n//             isStreaming: false\n//           }];\n//         }\n//         return prev;\n//       });\n//     } catch (error) {\n//       showNotification('error', '发送失败', error.message);\n//       setMessages(prev => [...prev, {\n//         content: '抱歉，与AI导师通信时出错',\n//         sender: 'bot',\n//         timestamp: new Date().toISOString(),\n//         isError: true\n//       }]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//\n//   return (\n//     <div style={{ maxWidth: 800, margin: '0 auto' }}>\n//       <Card\n//         title=\"AI学习导师\"\n//         extra={\n//           <Select\n//             defaultValue=\"level1\"\n//             style={{ width: 120 }}\n//             onChange={setContextLevel}\n//           >\n//             <Option value=\"level1\">Level 1 上下文</Option>\n//             <Option value=\"level2\">Level 2 上下文</Option>\n//           </Select>\n//         }\n//       >\n//         <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\n//           <List\n//             dataSource={messages}\n//             renderItem={(item) => (\n//               // 修改消息气泡样式\n//               <List.Item style={{\n//                 padding: '8px 0',\n//                 justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\n//               }}>\n//                 <div style={{\n//                   display: 'flex',\n//                   flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\n//                   alignItems: 'flex-start',\n//                   gap: 12\n//                 }}>\n//                   <Avatar\n//                     icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\n//                     style={{\n//                       backgroundColor: item.sender === 'user' ? '#2a97ff' : '#00b4b4',\n//                       boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n//                     }}\n//                   />\n//                   <div style={{\n//                     maxWidth: '70%',\n//                     background: item.sender === 'user'\n//                       ? 'linear-gradient(135deg, #2a97ff, #0066cc)'\n//                       : 'linear-gradient(135deg, #00b4b4, #008080)',\n//                     color: 'white',\n//                     padding: '12px 16px',\n//                     borderRadius: item.sender === 'user' ? '18px 4px 18px 18px' : '4px 18px 18px 18px',\n//                     boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n//                     transition: 'all 0.3s'\n//                   }}>\n//                     {item.content}\n//                   </div>\n//                 </div>\n//               </List.Item>\n//             )}\n//           />\n//           <div ref={messagesEndRef} />\n//           {loading && (\n//             <div style={{ textAlign: 'center', padding: 12 }}>\n//               <Spin tip=\"AI导师正在思考...\" />\n//             </div>\n//           )}\n//         </div>\n//\n//         <Form form={form} layout=\"vertical\">\n//           <Item label=\"上下文ID\" name=\"contextId\" style={{ marginBottom: 8 }}>\n//             <Input\n//               placeholder=\"输入知识图谱ID (可选)\"\n//               onChange={(e) => setContextId(e.target.value || null)}\n//             />\n//           </Item>\n//           <Item>\n//             <div style={{ display: 'flex', gap: 8 }}>\n//               <TextArea\n//                 value={inputValue}\n//                 onChange={(e) => setInputValue(e.target.value)}\n//                 placeholder=\"输入您的问题...\"\n//                 autoSize={{ minRows: 2, maxRows: 6 }}\n//                 onPressEnter={(e) => {\n//                   if (!e.shiftKey) {\n//                     e.preventDefault();\n//                     handleSendMessage();\n//                   }\n//                 }}\n//               />\n//               <Button\n//                 type=\"primary\"\n//                 onClick={handleSendMessage}\n//                 style={{ height: 'auto' }}\n//                 loading={loading}\n//                 disabled={loading}\n//               >\n//                 发送\n//               </Button>\n//             </div>\n//           </Item>\n//         </Form>\n//\n//         <Divider />\n//\n//       </Card>\n//     </div>\n//   );\n// };\n//\n// export default LearningChat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Input, Button, Card, List, Avatar, Select, Divider, Spin, message, Form } from 'antd';\nimport { UserOutlined, RobotOutlined } from '@ant-design/icons';\nimport { streamChat } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Item\n} = Form;\nconst LearningChat = ({\n  showNotification\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [contextLevel, setContextLevel] = useState('level1');\n  const [contextId, setContextId] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [form] = Form.useForm();\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      content: inputValue,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages([...messages, userMessage]);\n    setInputValue('');\n    setLoading(true);\n    try {\n      setMessages(prev => [...prev, {\n        content: '...',\n        sender: 'bot',\n        timestamp: new Date().toISOString(),\n        isStreaming: true\n      }]);\n      const response = await streamChat(inputValue, contextLevel, contextId);\n      setMessages(prev => {\n        const last = prev[prev.length - 1];\n        if (last.isStreaming) {\n          return [...prev.slice(0, -1), {\n            ...last,\n            content: response.content || response,\n            isStreaming: false\n          }];\n        }\n        return prev;\n      });\n    } catch (error) {\n      showNotification('error', '发送失败', error.message);\n      setMessages(prev => [...prev, {\n        content: '抱歉，与AI导师通信时出错',\n        sender: 'bot',\n        timestamp: new Date().toISOString(),\n        isError: true\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 1200,\n      margin: '0 auto',\n      backgroundColor: '#ffffff',\n      minHeight: '100vh',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '24px',\n          fontWeight: 'bold',\n          color: '#1890ff',\n          textShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)',\n          fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif'\n        },\n        children: \"AI\\u5B66\\u4E60\\u5BFC\\u5E08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 10\n      }, this),\n      headStyle: {\n        borderBottom: '1px solid #f0f0f0',\n        padding: '0 24px'\n      },\n      style: {\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n        borderRadius: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 500,\n          overflowY: 'auto',\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          dataSource: messages,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            style: {\n              padding: '8px 0',\n              justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\n                alignItems: 'flex-start',\n                gap: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                icon: item.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 52\n                }, this) : /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 71\n                }, this),\n                style: {\n                  backgroundColor: item.sender === 'user' ? '#2a97ff' : '#00b4b4',\n                  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  maxWidth: '70%',\n                  background: item.sender === 'user' ? 'linear-gradient(135deg, #2a97ff, #0066cc)' : 'linear-gradient(135deg, #00b4b4, #008080)',\n                  color: 'white',\n                  padding: '12px 16px',\n                  borderRadius: item.sender === 'user' ? '18px 4px 18px 18px' : '4px 18px 18px 18px',\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n                  transition: 'all 0.3s'\n                },\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(Spin, {\n            tip: \"AI\\u5BFC\\u5E08\\u6B63\\u5728\\u601D\\u8003...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u4E0A\\u4E0B\\u6587ID\",\n          name: \"contextId\",\n          style: {\n            marginBottom: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u8F93\\u5165\\u77E5\\u8BC6\\u56FE\\u8C31ID (\\u53EF\\u9009)\",\n            onChange: e => setContextId(e.target.value || null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextArea, {\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              placeholder: \"\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898...\",\n              autoSize: {\n                minRows: 2,\n                maxRows: 6\n              },\n              onPressEnter: e => {\n                if (!e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: handleSendMessage,\n              style: {\n                height: 'auto'\n              },\n              loading: loading,\n              disabled: loading,\n              children: \"\\u53D1\\u9001\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(LearningChat, \"iUkHOwGpQ4Y/ZP9vnD4YT3k1PcA=\", false, function () {\n  return [Form.useForm];\n});\n_c = LearningChat;\nexport default LearningChat;\nvar _c;\n$RefreshReg$(_c, \"LearningChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Input","Button","Card","List","Avatar","Select","Divider","Spin","message","Form","UserOutlined","RobotOutlined","streamChat","jsxDEV","_jsxDEV","TextArea","Option","Item","LearningChat","showNotification","_s","messages","setMessages","inputValue","setInputValue","loading","setLoading","contextLevel","setContextLevel","contextId","setContextId","messagesEndRef","form","useForm","handleSendMessage","trim","userMessage","content","sender","timestamp","Date","toISOString","prev","isStreaming","response","last","length","slice","error","isError","style","maxWidth","margin","backgroundColor","minHeight","padding","children","title","fontSize","fontWeight","color","textShadow","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","headStyle","borderBottom","boxShadow","borderRadius","height","overflowY","marginBottom","dataSource","renderItem","item","justifyContent","display","flexDirection","alignItems","gap","icon","background","transition","ref","textAlign","tip","layout","label","name","placeholder","onChange","e","target","value","autoSize","minRows","maxRows","onPressEnter","shiftKey","preventDefault","type","onClick","disabled","_c","$RefreshReg$"],"sources":["G:/Python/ALPSF/src/components/LearningChat.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\r\n// import {\r\n//   Input,\r\n//   Button,\r\n//   Card,\r\n//   List,\r\n//   Avatar,\r\n//   Select,\r\n//   Divider,\r\n//   Spin,\r\n//   message,\r\n//   Form // 添加Form导入\r\n// } from 'antd';\r\n// import { UserOutlined, RobotOutlined } from '@ant-design/icons';\r\n// import { streamChat } from '../services/api';\r\n//\r\n// const { TextArea } = Input;\r\n// const { Option } = Select;\r\n// const { Item } = Form; // 获取Form.Item的快捷方式\r\n//\r\n// const LearningChat = ({ showNotification }) => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [inputValue, setInputValue] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [contextLevel, setContextLevel] = useState('level1');\r\n//   const [contextId, setContextId] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n//   const [form] = Form.useForm(); // 初始化表单实例\r\n//\r\n//   const handleSendMessage = async () => {\r\n//     if (!inputValue.trim()) return;\r\n//\r\n//     const userMessage = {\r\n//       content: inputValue,\r\n//       sender: 'user',\r\n//       timestamp: new Date().toISOString()\r\n//     };\r\n//\r\n//     setMessages([...messages, userMessage]);\r\n//     setInputValue('');\r\n//     setLoading(true);\r\n//\r\n//     try {\r\n//       // 添加临时消息占位\r\n//       setMessages(prev => [...prev, {\r\n//         content: '...',\r\n//         sender: 'bot',\r\n//         timestamp: new Date().toISOString(),\r\n//         isStreaming: true\r\n//       }]);\r\n//\r\n//       // 这里需要根据实际的streamChat实现调整\r\n//       const response = await streamChat(inputValue, contextLevel, contextId);\r\n//\r\n//       // 假设streamChat返回完整响应（实际可能是流式）\r\n//       setMessages(prev => {\r\n//         const last = prev[prev.length - 1];\r\n//         if (last.isStreaming) {\r\n//           return [...prev.slice(0, -1), {\r\n//             ...last,\r\n//             content: response.content || response,\r\n//             isStreaming: false\r\n//           }];\r\n//         }\r\n//         return prev;\r\n//       });\r\n//     } catch (error) {\r\n//       showNotification('error', '发送失败', error.message);\r\n//       setMessages(prev => [...prev, {\r\n//         content: '抱歉，与AI导师通信时出错',\r\n//         sender: 'bot',\r\n//         timestamp: new Date().toISOString(),\r\n//         isError: true\r\n//       }]);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n//\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: '0 auto' }}>\r\n//       <Card\r\n//         title=\"AI学习导师\"\r\n//         extra={\r\n//           <Select\r\n//             defaultValue=\"level1\"\r\n//             style={{ width: 120 }}\r\n//             onChange={setContextLevel}\r\n//           >\r\n//             <Option value=\"level1\">Level 1 上下文</Option>\r\n//             <Option value=\"level2\">Level 2 上下文</Option>\r\n//           </Select>\r\n//         }\r\n//       >\r\n//         <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\r\n//           <List\r\n//             dataSource={messages}\r\n//             renderItem={(item) => (\r\n//               // 修改消息气泡样式\r\n//               <List.Item style={{\r\n//                 padding: '8px 0',\r\n//                 justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\r\n//               }}>\r\n//                 <div style={{\r\n//                   display: 'flex',\r\n//                   flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\r\n//                   alignItems: 'flex-start',\r\n//                   gap: 12\r\n//                 }}>\r\n//                   <Avatar\r\n//                     icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\r\n//                     style={{\r\n//                       backgroundColor: item.sender === 'user' ? '#2a97ff' : '#00b4b4',\r\n//                       boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\r\n//                     }}\r\n//                   />\r\n//                   <div style={{\r\n//                     maxWidth: '70%',\r\n//                     background: item.sender === 'user'\r\n//                       ? 'linear-gradient(135deg, #2a97ff, #0066cc)'\r\n//                       : 'linear-gradient(135deg, #00b4b4, #008080)',\r\n//                     color: 'white',\r\n//                     padding: '12px 16px',\r\n//                     borderRadius: item.sender === 'user' ? '18px 4px 18px 18px' : '4px 18px 18px 18px',\r\n//                     boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n//                     transition: 'all 0.3s'\r\n//                   }}>\r\n//                     {item.content}\r\n//                   </div>\r\n//                 </div>\r\n//               </List.Item>\r\n//             )}\r\n//           />\r\n//           <div ref={messagesEndRef} />\r\n//           {loading && (\r\n//             <div style={{ textAlign: 'center', padding: 12 }}>\r\n//               <Spin tip=\"AI导师正在思考...\" />\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//\r\n//         <Form form={form} layout=\"vertical\">\r\n//           <Item label=\"上下文ID\" name=\"contextId\" style={{ marginBottom: 8 }}>\r\n//             <Input\r\n//               placeholder=\"输入知识图谱ID (可选)\"\r\n//               onChange={(e) => setContextId(e.target.value || null)}\r\n//             />\r\n//           </Item>\r\n//           <Item>\r\n//             <div style={{ display: 'flex', gap: 8 }}>\r\n//               <TextArea\r\n//                 value={inputValue}\r\n//                 onChange={(e) => setInputValue(e.target.value)}\r\n//                 placeholder=\"输入您的问题...\"\r\n//                 autoSize={{ minRows: 2, maxRows: 6 }}\r\n//                 onPressEnter={(e) => {\r\n//                   if (!e.shiftKey) {\r\n//                     e.preventDefault();\r\n//                     handleSendMessage();\r\n//                   }\r\n//                 }}\r\n//               />\r\n//               <Button\r\n//                 type=\"primary\"\r\n//                 onClick={handleSendMessage}\r\n//                 style={{ height: 'auto' }}\r\n//                 loading={loading}\r\n//                 disabled={loading}\r\n//               >\r\n//                 发送\r\n//               </Button>\r\n//             </div>\r\n//           </Item>\r\n//         </Form>\r\n//\r\n//         <Divider />\r\n//\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default LearningChat;\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Input,\r\n  Button,\r\n  Card,\r\n  List,\r\n  Avatar,\r\n  Select,\r\n  Divider,\r\n  Spin,\r\n  message,\r\n  Form\r\n} from 'antd';\r\nimport { UserOutlined, RobotOutlined } from '@ant-design/icons';\r\nimport { streamChat } from '../services/api';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Item } = Form;\r\n\r\nconst LearningChat = ({ showNotification }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [contextLevel, setContextLevel] = useState('level1');\r\n  const [contextId, setContextId] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = {\r\n      content: inputValue,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    setMessages([...messages, userMessage]);\r\n    setInputValue('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      setMessages(prev => [...prev, {\r\n        content: '...',\r\n        sender: 'bot',\r\n        timestamp: new Date().toISOString(),\r\n        isStreaming: true\r\n      }]);\r\n\r\n      const response = await streamChat(inputValue, contextLevel, contextId);\r\n\r\n      setMessages(prev => {\r\n        const last = prev[prev.length - 1];\r\n        if (last.isStreaming) {\r\n          return [...prev.slice(0, -1), {\r\n            ...last,\r\n            content: response.content || response,\r\n            isStreaming: false\r\n          }];\r\n        }\r\n        return prev;\r\n      });\r\n    } catch (error) {\r\n      showNotification('error', '发送失败', error.message);\r\n      setMessages(prev => [...prev, {\r\n        content: '抱歉，与AI导师通信时出错',\r\n        sender: 'bot',\r\n        timestamp: new Date().toISOString(),\r\n        isError: true\r\n      }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      maxWidth: 1200,\r\n      margin: '0 auto',\r\n      backgroundColor: '#ffffff',\r\n      minHeight: '100vh',\r\n      padding: '20px'\r\n    }}>\r\n      <Card\r\n  title={<span style={{\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    color: '#1890ff',\r\n    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)',\r\n    fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif'\r\n  }}>AI学习导师</span>}\r\n  headStyle={{\r\n    borderBottom: '1px solid #f0f0f0',\r\n    padding: '0 24px'\r\n  }}\r\n  style={{ \r\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '8px'\r\n  }}\r\n></Card>\r\n\r\n\r\n      <Card\r\n\r\n        style={{ boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)' }}\r\n      >\r\n        <div style={{ height: 500, overflowY: 'auto', marginBottom: 16 }}>\r\n          <List\r\n            dataSource={messages}\r\n            renderItem={(item) => (\r\n              <List.Item style={{\r\n                padding: '8px 0',\r\n                justifyContent: item.sender === 'user' ? 'flex-end' : 'flex-start'\r\n              }}>\r\n                <div style={{\r\n                  display: 'flex',\r\n                  flexDirection: item.sender === 'user' ? 'row-reverse' : 'row',\r\n                  alignItems: 'flex-start',\r\n                  gap: 12\r\n                }}>\r\n                  <Avatar\r\n                    icon={item.sender === 'user' ? <UserOutlined /> : <RobotOutlined />}\r\n                    style={{\r\n                      backgroundColor: item.sender === 'user' ? '#2a97ff' : '#00b4b4',\r\n                      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\r\n                    }}\r\n                  />\r\n                  <div style={{\r\n                    maxWidth: '70%',\r\n                    background: item.sender === 'user'\r\n                      ? 'linear-gradient(135deg, #2a97ff, #0066cc)'\r\n                      : 'linear-gradient(135deg, #00b4b4, #008080)',\r\n                    color: 'white',\r\n                    padding: '12px 16px',\r\n                    borderRadius: item.sender === 'user' ? '18px 4px 18px 18px' : '4px 18px 18px 18px',\r\n                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n                    transition: 'all 0.3s'\r\n                  }}>\r\n                    {item.content}\r\n                  </div>\r\n                </div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n          <div ref={messagesEndRef} />\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', padding: 12 }}>\r\n              <Spin tip=\"AI导师正在思考...\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Form form={form} layout=\"vertical\">\r\n          <Item label=\"上下文ID\" name=\"contextId\" style={{ marginBottom: 8 }}>\r\n            <Input\r\n              placeholder=\"输入知识图谱ID (可选)\"\r\n              onChange={(e) => setContextId(e.target.value || null)}\r\n            />\r\n          </Item>\r\n          <Item>\r\n            <div style={{ display: 'flex', gap: 8 }}>\r\n              <TextArea\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                placeholder=\"输入您的问题...\"\r\n                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                onPressEnter={(e) => {\r\n                  if (!e.shiftKey) {\r\n                    e.preventDefault();\r\n                    handleSendMessage();\r\n                  }\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={handleSendMessage}\r\n                style={{ height: 'auto' }}\r\n                loading={loading}\r\n                disabled={loading}\r\n              >\r\n                发送\r\n              </Button>\r\n            </div>\r\n          </Item>\r\n        </Form>\r\n\r\n        <Divider />\r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearningChat;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}